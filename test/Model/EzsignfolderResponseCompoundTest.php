<?php
/**
 * EzsignfolderResponseCompoundTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  eZmaxAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * eZmax API Definition
 *
 * This API expose all the functionnalities for the eZmax and eZsign application.  We provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.  You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.  If you need helping understanding how to use this API, don't waste too much time looking for it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like bad documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.
 *
 * The version of the OpenAPI document: 1.0.25
 * Contact: support-api@ezmax.ca
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace eZmaxAPI\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * EzsignfolderResponseCompoundTest Class Doc Comment
 *
 * @category    Class
 * @description An Ezsignfolder Object and children to create a complete structure
 * @package     eZmaxAPI
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class EzsignfolderResponseCompoundTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "EzsignfolderResponseCompound"
     */
    public function testEzsignfolderResponseCompound()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fkiEzsignfoldertypeID"
     */
    public function testPropertyFkiEzsignfoldertypeID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fkiEzsigntsarequirementID"
     */
    public function testPropertyFkiEzsigntsarequirementID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sEzsignfolderDescription"
     */
    public function testPropertySEzsignfolderDescription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tEzsignfolderNote"
     */
    public function testPropertyTEzsignfolderNote()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eEzsignfolderSendreminderfrequency"
     */
    public function testPropertyEEzsignfolderSendreminderfrequency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pkiEzsignfolderID"
     */
    public function testPropertyPkiEzsignfolderID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dtEzsignfolderSentdate"
     */
    public function testPropertyDtEzsignfolderSentdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eEzsignfolderStep"
     */
    public function testPropertyEEzsignfolderStep()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dtEzsignfolderClose"
     */
    public function testPropertyDtEzsignfolderClose()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fkiUserIDCreated"
     */
    public function testPropertyFkiUserIDCreated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fkiUserIDModified"
     */
    public function testPropertyFkiUserIDModified()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fkiApikeyIDCreated"
     */
    public function testPropertyFkiApikeyIDCreated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fkiApikeyIDModified"
     */
    public function testPropertyFkiApikeyIDModified()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dtCreatedDate"
     */
    public function testPropertyDtCreatedDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dtModifiedDate"
     */
    public function testPropertyDtModifiedDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
