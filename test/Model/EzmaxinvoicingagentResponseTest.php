<?php
/**
 * EzmaxinvoicingagentResponseTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  eZmaxAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace eZmaxAPI\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * EzmaxinvoicingagentResponseTest Class Doc Comment
 *
 * @category    Class
 * @description A Ezmaxinvoicingagent Object
 * @package     eZmaxAPI
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class EzmaxinvoicingagentResponseTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "EzmaxinvoicingagentResponse"
     */
    public function testEzmaxinvoicingagentResponse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pkiEzmaxinvoicingagentID"
     */
    public function testPropertyPkiEzmaxinvoicingagentID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fkiEzmaxinvoicingID"
     */
    public function testPropertyFkiEzmaxinvoicingID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fkiBillingentityinternalID"
     */
    public function testPropertyFkiBillingentityinternalID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sBillingentityinternalDescriptionX"
     */
    public function testPropertySBillingentityinternalDescriptionX()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fkiAgentID"
     */
    public function testPropertyFkiAgentID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fkiBrokerID"
     */
    public function testPropertyFkiBrokerID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iEzmaxinvoicingagentSession"
     */
    public function testPropertyIEzmaxinvoicingagentSession()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iEzmaxinvoicingagentCloned"
     */
    public function testPropertyIEzmaxinvoicingagentCloned()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iEzmaxinvoicingagentInvoice"
     */
    public function testPropertyIEzmaxinvoicingagentInvoice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iEzmaxinvoicingagentInscription"
     */
    public function testPropertyIEzmaxinvoicingagentInscription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iEzmaxinvoicingagentInscriptionactive"
     */
    public function testPropertyIEzmaxinvoicingagentInscriptionactive()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iEzmaxinvoicingagentSale"
     */
    public function testPropertyIEzmaxinvoicingagentSale()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iEzmaxinvoicingagentOtherincome"
     */
    public function testPropertyIEzmaxinvoicingagentOtherincome()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iEzmaxinvoicingagentCommissioncalculation"
     */
    public function testPropertyIEzmaxinvoicingagentCommissioncalculation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iEzmaxinvoicingagentEzsigndocument"
     */
    public function testPropertyIEzmaxinvoicingagentEzsigndocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bEzmaxinvoicingagentEzsignaccount"
     */
    public function testPropertyBEzmaxinvoicingagentEzsignaccount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bEzmaxinvoicingagentBillableezmax"
     */
    public function testPropertyBEzmaxinvoicingagentBillableezmax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eEzmaxinvoicingagentVariationezmax"
     */
    public function testPropertyEEzmaxinvoicingagentVariationezmax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bEzmaxinvoicingagentBillableezsign"
     */
    public function testPropertyBEzmaxinvoicingagentBillableezsign()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eEzmaxinvoicingagentVariationezsign"
     */
    public function testPropertyEEzmaxinvoicingagentVariationezsign()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
