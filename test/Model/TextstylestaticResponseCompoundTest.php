<?php
/**
 * TextstylestaticResponseCompoundTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  eZmaxAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace eZmaxAPI\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * TextstylestaticResponseCompoundTest Class Doc Comment
 *
 * @category    Class
 * @description A Textstylestatic Object
 * @package     eZmaxAPI
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class TextstylestaticResponseCompoundTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "TextstylestaticResponseCompound"
     */
    public function testTextstylestaticResponseCompound()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pkiTextstylestaticID"
     */
    public function testPropertypkiTextstylestaticID()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fkiFontID"
     */
    public function testPropertyfkiFontID()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sFontName"
     */
    public function testPropertysFontName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bTextstylestaticBold"
     */
    public function testPropertybTextstylestaticBold()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bTextstylestaticUnderline"
     */
    public function testPropertybTextstylestaticUnderline()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bTextstylestaticItalic"
     */
    public function testPropertybTextstylestaticItalic()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bTextstylestaticStrikethrough"
     */
    public function testPropertybTextstylestaticStrikethrough()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iTextstylestaticFontcolor"
     */
    public function testPropertyiTextstylestaticFontcolor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iTextstylestaticSize"
     */
    public function testPropertyiTextstylestaticSize()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
