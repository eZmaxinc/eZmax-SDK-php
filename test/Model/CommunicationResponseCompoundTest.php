<?php
/**
 * CommunicationResponseCompoundTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  eZmaxAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace eZmaxAPI\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * CommunicationResponseCompoundTest Class Doc Comment
 *
 * @category    Class
 * @description A Communication Object
 * @package     eZmaxAPI
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class CommunicationResponseCompoundTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CommunicationResponseCompound"
     */
    public function testCommunicationResponseCompound()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pkiCommunicationID"
     */
    public function testPropertyPkiCommunicationID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eCommunicationImportance"
     */
    public function testPropertyECommunicationImportance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eCommunicationType"
     */
    public function testPropertyECommunicationType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sCommunicationSubject"
     */
    public function testPropertySCommunicationSubject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sCommunicationBodyurl"
     */
    public function testPropertySCommunicationBodyurl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eCommunicationDirection"
     */
    public function testPropertyECommunicationDirection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iCommunicationrecipientCount"
     */
    public function testPropertyICommunicationrecipientCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bCommunicationPrivate"
     */
    public function testPropertyBCommunicationPrivate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "objDescriptionstaticSender"
     */
    public function testPropertyObjDescriptionstaticSender()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "objEmailstaticSender"
     */
    public function testPropertyObjEmailstaticSender()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "objPhonestaticSender"
     */
    public function testPropertyObjPhonestaticSender()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "objAudit"
     */
    public function testPropertyObjAudit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "aObjCommunicationattachment"
     */
    public function testPropertyAObjCommunicationattachment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "aObjCommunicationrecipient"
     */
    public function testPropertyAObjCommunicationrecipient()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "aObjCommunicationexternalrecipient"
     */
    public function testPropertyAObjCommunicationexternalrecipient()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
