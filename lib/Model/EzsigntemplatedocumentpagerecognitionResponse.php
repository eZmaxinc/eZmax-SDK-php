<?php
/**
 * EzsigntemplatedocumentpagerecognitionResponse
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  eZmaxAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace eZmaxAPI\Model;

use \ArrayAccess;
use \eZmaxAPI\ObjectSerializer;

/**
 * EzsigntemplatedocumentpagerecognitionResponse Class Doc Comment
 *
 * @category Class
 * @description A Ezsigntemplatedocumentpagerecognition Object
 * @package  eZmaxAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class EzsigntemplatedocumentpagerecognitionResponse implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ezsigntemplatedocumentpagerecognition-Response';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'pkiEzsigntemplatedocumentpagerecognitionID' => 'int',
        'fkiEzsigntemplatedocumentpageID' => 'int',
        'eEzsigntemplatedocumentpagerecognitionOperator' => '\eZmaxAPI\Model\FieldEEzsigntemplatedocumentpagerecognitionOperator',
        'eEzsigntemplatedocumentpagerecognitionSection' => '\eZmaxAPI\Model\FieldEEzsigntemplatedocumentpagerecognitionSection',
        'iEzsigntemplatedocumentpagerecognitionSimilarpercentage' => 'int',
        'iEzsigntemplatedocumentpagerecognitionX' => 'int',
        'iEzsigntemplatedocumentpagerecognitionY' => 'int',
        'iEzsigntemplatedocumentpagerecognitionWidth' => 'int',
        'iEzsigntemplatedocumentpagerecognitionHeight' => 'int',
        'tEzsigntemplatedocumentpagerecognitionText' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'pkiEzsigntemplatedocumentpagerecognitionID' => null,
        'fkiEzsigntemplatedocumentpageID' => null,
        'eEzsigntemplatedocumentpagerecognitionOperator' => null,
        'eEzsigntemplatedocumentpagerecognitionSection' => null,
        'iEzsigntemplatedocumentpagerecognitionSimilarpercentage' => null,
        'iEzsigntemplatedocumentpagerecognitionX' => null,
        'iEzsigntemplatedocumentpagerecognitionY' => null,
        'iEzsigntemplatedocumentpagerecognitionWidth' => null,
        'iEzsigntemplatedocumentpagerecognitionHeight' => null,
        'tEzsigntemplatedocumentpagerecognitionText' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'pkiEzsigntemplatedocumentpagerecognitionID' => false,
		'fkiEzsigntemplatedocumentpageID' => false,
		'eEzsigntemplatedocumentpagerecognitionOperator' => false,
		'eEzsigntemplatedocumentpagerecognitionSection' => false,
		'iEzsigntemplatedocumentpagerecognitionSimilarpercentage' => false,
		'iEzsigntemplatedocumentpagerecognitionX' => false,
		'iEzsigntemplatedocumentpagerecognitionY' => false,
		'iEzsigntemplatedocumentpagerecognitionWidth' => false,
		'iEzsigntemplatedocumentpagerecognitionHeight' => false,
		'tEzsigntemplatedocumentpagerecognitionText' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'pkiEzsigntemplatedocumentpagerecognitionID' => 'pkiEzsigntemplatedocumentpagerecognitionID',
        'fkiEzsigntemplatedocumentpageID' => 'fkiEzsigntemplatedocumentpageID',
        'eEzsigntemplatedocumentpagerecognitionOperator' => 'eEzsigntemplatedocumentpagerecognitionOperator',
        'eEzsigntemplatedocumentpagerecognitionSection' => 'eEzsigntemplatedocumentpagerecognitionSection',
        'iEzsigntemplatedocumentpagerecognitionSimilarpercentage' => 'iEzsigntemplatedocumentpagerecognitionSimilarpercentage',
        'iEzsigntemplatedocumentpagerecognitionX' => 'iEzsigntemplatedocumentpagerecognitionX',
        'iEzsigntemplatedocumentpagerecognitionY' => 'iEzsigntemplatedocumentpagerecognitionY',
        'iEzsigntemplatedocumentpagerecognitionWidth' => 'iEzsigntemplatedocumentpagerecognitionWidth',
        'iEzsigntemplatedocumentpagerecognitionHeight' => 'iEzsigntemplatedocumentpagerecognitionHeight',
        'tEzsigntemplatedocumentpagerecognitionText' => 'tEzsigntemplatedocumentpagerecognitionText'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'pkiEzsigntemplatedocumentpagerecognitionID' => 'setPkiEzsigntemplatedocumentpagerecognitionID',
        'fkiEzsigntemplatedocumentpageID' => 'setFkiEzsigntemplatedocumentpageID',
        'eEzsigntemplatedocumentpagerecognitionOperator' => 'setEEzsigntemplatedocumentpagerecognitionOperator',
        'eEzsigntemplatedocumentpagerecognitionSection' => 'setEEzsigntemplatedocumentpagerecognitionSection',
        'iEzsigntemplatedocumentpagerecognitionSimilarpercentage' => 'setIEzsigntemplatedocumentpagerecognitionSimilarpercentage',
        'iEzsigntemplatedocumentpagerecognitionX' => 'setIEzsigntemplatedocumentpagerecognitionX',
        'iEzsigntemplatedocumentpagerecognitionY' => 'setIEzsigntemplatedocumentpagerecognitionY',
        'iEzsigntemplatedocumentpagerecognitionWidth' => 'setIEzsigntemplatedocumentpagerecognitionWidth',
        'iEzsigntemplatedocumentpagerecognitionHeight' => 'setIEzsigntemplatedocumentpagerecognitionHeight',
        'tEzsigntemplatedocumentpagerecognitionText' => 'setTEzsigntemplatedocumentpagerecognitionText'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'pkiEzsigntemplatedocumentpagerecognitionID' => 'getPkiEzsigntemplatedocumentpagerecognitionID',
        'fkiEzsigntemplatedocumentpageID' => 'getFkiEzsigntemplatedocumentpageID',
        'eEzsigntemplatedocumentpagerecognitionOperator' => 'getEEzsigntemplatedocumentpagerecognitionOperator',
        'eEzsigntemplatedocumentpagerecognitionSection' => 'getEEzsigntemplatedocumentpagerecognitionSection',
        'iEzsigntemplatedocumentpagerecognitionSimilarpercentage' => 'getIEzsigntemplatedocumentpagerecognitionSimilarpercentage',
        'iEzsigntemplatedocumentpagerecognitionX' => 'getIEzsigntemplatedocumentpagerecognitionX',
        'iEzsigntemplatedocumentpagerecognitionY' => 'getIEzsigntemplatedocumentpagerecognitionY',
        'iEzsigntemplatedocumentpagerecognitionWidth' => 'getIEzsigntemplatedocumentpagerecognitionWidth',
        'iEzsigntemplatedocumentpagerecognitionHeight' => 'getIEzsigntemplatedocumentpagerecognitionHeight',
        'tEzsigntemplatedocumentpagerecognitionText' => 'getTEzsigntemplatedocumentpagerecognitionText'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('pkiEzsigntemplatedocumentpagerecognitionID', $data ?? [], null);
        $this->setIfExists('fkiEzsigntemplatedocumentpageID', $data ?? [], null);
        $this->setIfExists('eEzsigntemplatedocumentpagerecognitionOperator', $data ?? [], null);
        $this->setIfExists('eEzsigntemplatedocumentpagerecognitionSection', $data ?? [], null);
        $this->setIfExists('iEzsigntemplatedocumentpagerecognitionSimilarpercentage', $data ?? [], null);
        $this->setIfExists('iEzsigntemplatedocumentpagerecognitionX', $data ?? [], null);
        $this->setIfExists('iEzsigntemplatedocumentpagerecognitionY', $data ?? [], null);
        $this->setIfExists('iEzsigntemplatedocumentpagerecognitionWidth', $data ?? [], null);
        $this->setIfExists('iEzsigntemplatedocumentpagerecognitionHeight', $data ?? [], null);
        $this->setIfExists('tEzsigntemplatedocumentpagerecognitionText', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['pkiEzsigntemplatedocumentpagerecognitionID'] === null) {
            $invalidProperties[] = "'pkiEzsigntemplatedocumentpagerecognitionID' can't be null";
        }
        if (($this->container['pkiEzsigntemplatedocumentpagerecognitionID'] > 65535)) {
            $invalidProperties[] = "invalid value for 'pkiEzsigntemplatedocumentpagerecognitionID', must be smaller than or equal to 65535.";
        }

        if (($this->container['pkiEzsigntemplatedocumentpagerecognitionID'] < 0)) {
            $invalidProperties[] = "invalid value for 'pkiEzsigntemplatedocumentpagerecognitionID', must be bigger than or equal to 0.";
        }

        if ($this->container['fkiEzsigntemplatedocumentpageID'] === null) {
            $invalidProperties[] = "'fkiEzsigntemplatedocumentpageID' can't be null";
        }
        if (($this->container['fkiEzsigntemplatedocumentpageID'] < 0)) {
            $invalidProperties[] = "invalid value for 'fkiEzsigntemplatedocumentpageID', must be bigger than or equal to 0.";
        }

        if ($this->container['eEzsigntemplatedocumentpagerecognitionOperator'] === null) {
            $invalidProperties[] = "'eEzsigntemplatedocumentpagerecognitionOperator' can't be null";
        }
        if ($this->container['eEzsigntemplatedocumentpagerecognitionSection'] === null) {
            $invalidProperties[] = "'eEzsigntemplatedocumentpagerecognitionSection' can't be null";
        }
        if (!is_null($this->container['iEzsigntemplatedocumentpagerecognitionSimilarpercentage']) && ($this->container['iEzsigntemplatedocumentpagerecognitionSimilarpercentage'] > 100)) {
            $invalidProperties[] = "invalid value for 'iEzsigntemplatedocumentpagerecognitionSimilarpercentage', must be smaller than or equal to 100.";
        }

        if (!is_null($this->container['iEzsigntemplatedocumentpagerecognitionSimilarpercentage']) && ($this->container['iEzsigntemplatedocumentpagerecognitionSimilarpercentage'] < 60)) {
            $invalidProperties[] = "invalid value for 'iEzsigntemplatedocumentpagerecognitionSimilarpercentage', must be bigger than or equal to 60.";
        }

        if (!is_null($this->container['iEzsigntemplatedocumentpagerecognitionX']) && ($this->container['iEzsigntemplatedocumentpagerecognitionX'] > 65535)) {
            $invalidProperties[] = "invalid value for 'iEzsigntemplatedocumentpagerecognitionX', must be smaller than or equal to 65535.";
        }

        if (!is_null($this->container['iEzsigntemplatedocumentpagerecognitionX']) && ($this->container['iEzsigntemplatedocumentpagerecognitionX'] < 0)) {
            $invalidProperties[] = "invalid value for 'iEzsigntemplatedocumentpagerecognitionX', must be bigger than or equal to 0.";
        }

        if (!is_null($this->container['iEzsigntemplatedocumentpagerecognitionY']) && ($this->container['iEzsigntemplatedocumentpagerecognitionY'] > 65535)) {
            $invalidProperties[] = "invalid value for 'iEzsigntemplatedocumentpagerecognitionY', must be smaller than or equal to 65535.";
        }

        if (!is_null($this->container['iEzsigntemplatedocumentpagerecognitionY']) && ($this->container['iEzsigntemplatedocumentpagerecognitionY'] < 0)) {
            $invalidProperties[] = "invalid value for 'iEzsigntemplatedocumentpagerecognitionY', must be bigger than or equal to 0.";
        }

        if (!is_null($this->container['iEzsigntemplatedocumentpagerecognitionWidth']) && ($this->container['iEzsigntemplatedocumentpagerecognitionWidth'] > 65535)) {
            $invalidProperties[] = "invalid value for 'iEzsigntemplatedocumentpagerecognitionWidth', must be smaller than or equal to 65535.";
        }

        if (!is_null($this->container['iEzsigntemplatedocumentpagerecognitionWidth']) && ($this->container['iEzsigntemplatedocumentpagerecognitionWidth'] < 0)) {
            $invalidProperties[] = "invalid value for 'iEzsigntemplatedocumentpagerecognitionWidth', must be bigger than or equal to 0.";
        }

        if (!is_null($this->container['iEzsigntemplatedocumentpagerecognitionHeight']) && ($this->container['iEzsigntemplatedocumentpagerecognitionHeight'] > 65535)) {
            $invalidProperties[] = "invalid value for 'iEzsigntemplatedocumentpagerecognitionHeight', must be smaller than or equal to 65535.";
        }

        if (!is_null($this->container['iEzsigntemplatedocumentpagerecognitionHeight']) && ($this->container['iEzsigntemplatedocumentpagerecognitionHeight'] < 0)) {
            $invalidProperties[] = "invalid value for 'iEzsigntemplatedocumentpagerecognitionHeight', must be bigger than or equal to 0.";
        }

        if ($this->container['tEzsigntemplatedocumentpagerecognitionText'] === null) {
            $invalidProperties[] = "'tEzsigntemplatedocumentpagerecognitionText' can't be null";
        }
//        if (!preg_match("/^[.\\D\\d]{0,65535}$/", $this->container['tEzsigntemplatedocumentpagerecognitionText'])) {
        if (!is_null($this->container['tEzsigntemplatedocumentpagerecognitionText']) && !preg_match("/(*UTF8)^[.\\D\\d]{0,65535}$/", $this->container['tEzsigntemplatedocumentpagerecognitionText'])) {
            $invalidProperties[] = "invalid value for 'tEzsigntemplatedocumentpagerecognitionText', must be conform to the pattern /^[.\\D\\d]{0,65535}$/.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets pkiEzsigntemplatedocumentpagerecognitionID
     *
     * @return int
     */
    public function getPkiEzsigntemplatedocumentpagerecognitionID()
    {
        return $this->container['pkiEzsigntemplatedocumentpagerecognitionID'];
    }

    /**
     * Sets pkiEzsigntemplatedocumentpagerecognitionID
     *
     * @param int $pkiEzsigntemplatedocumentpagerecognitionID The unique ID of the Ezsigntemplatedocumentpagerecognition
     *
     * @return self
     */
    public function setPkiEzsigntemplatedocumentpagerecognitionID($pkiEzsigntemplatedocumentpagerecognitionID)
    {
	//Openapi doesn't allow to set a variable to null when it's defined as Non-nullable even if it is the normal way of unsetting a variable
        //if (is_null($pkiEzsigntemplatedocumentpagerecognitionID)) {
            //throw new \InvalidArgumentException('non-nullable pkiEzsigntemplatedocumentpagerecognitionID cannot be null');
        //}

//        if (($pkiEzsigntemplatedocumentpagerecognitionID > 65535)) {
        if (($pkiEzsigntemplatedocumentpagerecognitionID > 65535)) {
            throw new \InvalidArgumentException('invalid value '.(is_null($pkiEzsigntemplatedocumentpagerecognitionID)?'null':'"'.$pkiEzsigntemplatedocumentpagerecognitionID.'"').' for pkiEzsigntemplatedocumentpagerecognitionID when calling EzsigntemplatedocumentpagerecognitionResponse., must be smaller than or equal to 65535.');
        }
//        if (($pkiEzsigntemplatedocumentpagerecognitionID < 0)) {
        if (($pkiEzsigntemplatedocumentpagerecognitionID < 0)) {
            throw new \InvalidArgumentException('invalid value '.(is_null($pkiEzsigntemplatedocumentpagerecognitionID)?'null':'"'.$pkiEzsigntemplatedocumentpagerecognitionID.'"').' for pkiEzsigntemplatedocumentpagerecognitionID when calling EzsigntemplatedocumentpagerecognitionResponse., must be bigger than or equal to 0.');
        }

        
	//Openapi doesn't cast variable so if you set a value to "1" instead of 1 in a int, it's not casted automatically
	//$this->container['pkiEzsigntemplatedocumentpagerecognitionID'] = $pkiEzsigntemplatedocumentpagerecognitionID;
        $this->container['pkiEzsigntemplatedocumentpagerecognitionID'] = (is_null($pkiEzsigntemplatedocumentpagerecognitionID) ? null : (int) $pkiEzsigntemplatedocumentpagerecognitionID);

        return $this;
    }

    /**
     * Gets fkiEzsigntemplatedocumentpageID
     *
     * @return int
     */
    public function getFkiEzsigntemplatedocumentpageID()
    {
        return $this->container['fkiEzsigntemplatedocumentpageID'];
    }

    /**
     * Sets fkiEzsigntemplatedocumentpageID
     *
     * @param int $fkiEzsigntemplatedocumentpageID The unique ID of the Ezsigntemplatedocumentpage
     *
     * @return self
     */
    public function setFkiEzsigntemplatedocumentpageID($fkiEzsigntemplatedocumentpageID)
    {
	//Openapi doesn't allow to set a variable to null when it's defined as Non-nullable even if it is the normal way of unsetting a variable
        //if (is_null($fkiEzsigntemplatedocumentpageID)) {
            //throw new \InvalidArgumentException('non-nullable fkiEzsigntemplatedocumentpageID cannot be null');
        //}

//        if (($fkiEzsigntemplatedocumentpageID < 0)) {
        if (($fkiEzsigntemplatedocumentpageID < 0)) {
            throw new \InvalidArgumentException('invalid value '.(is_null($fkiEzsigntemplatedocumentpageID)?'null':'"'.$fkiEzsigntemplatedocumentpageID.'"').' for fkiEzsigntemplatedocumentpageID when calling EzsigntemplatedocumentpagerecognitionResponse., must be bigger than or equal to 0.');
        }

        
	//Openapi doesn't cast variable so if you set a value to "1" instead of 1 in a int, it's not casted automatically
	//$this->container['fkiEzsigntemplatedocumentpageID'] = $fkiEzsigntemplatedocumentpageID;
        $this->container['fkiEzsigntemplatedocumentpageID'] = (is_null($fkiEzsigntemplatedocumentpageID) ? null : (int) $fkiEzsigntemplatedocumentpageID);

        return $this;
    }

    /**
     * Gets eEzsigntemplatedocumentpagerecognitionOperator
     *
     * @return \eZmaxAPI\Model\FieldEEzsigntemplatedocumentpagerecognitionOperator
     */
    public function getEEzsigntemplatedocumentpagerecognitionOperator()
    {
        return $this->container['eEzsigntemplatedocumentpagerecognitionOperator'];
    }

    /**
     * Sets eEzsigntemplatedocumentpagerecognitionOperator
     *
     * @param \eZmaxAPI\Model\FieldEEzsigntemplatedocumentpagerecognitionOperator $eEzsigntemplatedocumentpagerecognitionOperator eEzsigntemplatedocumentpagerecognitionOperator
     *
     * @return self
     */
    public function setEEzsigntemplatedocumentpagerecognitionOperator($eEzsigntemplatedocumentpagerecognitionOperator)
    {
	//Openapi doesn't allow to set a variable to null when it's defined as Non-nullable even if it is the normal way of unsetting a variable
        //if (is_null($eEzsigntemplatedocumentpagerecognitionOperator)) {
            //throw new \InvalidArgumentException('non-nullable eEzsigntemplatedocumentpagerecognitionOperator cannot be null');
        //}
        
	//Openapi doesn't cast variable so if you set a value to "1" instead of 1 in a int, it's not casted automatically
	//$this->container['eEzsigntemplatedocumentpagerecognitionOperator'] = $eEzsigntemplatedocumentpagerecognitionOperator;
        $this->container['eEzsigntemplatedocumentpagerecognitionOperator'] = $eEzsigntemplatedocumentpagerecognitionOperator;

        return $this;
    }

    /**
     * Gets eEzsigntemplatedocumentpagerecognitionSection
     *
     * @return \eZmaxAPI\Model\FieldEEzsigntemplatedocumentpagerecognitionSection
     */
    public function getEEzsigntemplatedocumentpagerecognitionSection()
    {
        return $this->container['eEzsigntemplatedocumentpagerecognitionSection'];
    }

    /**
     * Sets eEzsigntemplatedocumentpagerecognitionSection
     *
     * @param \eZmaxAPI\Model\FieldEEzsigntemplatedocumentpagerecognitionSection $eEzsigntemplatedocumentpagerecognitionSection eEzsigntemplatedocumentpagerecognitionSection
     *
     * @return self
     */
    public function setEEzsigntemplatedocumentpagerecognitionSection($eEzsigntemplatedocumentpagerecognitionSection)
    {
	//Openapi doesn't allow to set a variable to null when it's defined as Non-nullable even if it is the normal way of unsetting a variable
        //if (is_null($eEzsigntemplatedocumentpagerecognitionSection)) {
            //throw new \InvalidArgumentException('non-nullable eEzsigntemplatedocumentpagerecognitionSection cannot be null');
        //}
        
	//Openapi doesn't cast variable so if you set a value to "1" instead of 1 in a int, it's not casted automatically
	//$this->container['eEzsigntemplatedocumentpagerecognitionSection'] = $eEzsigntemplatedocumentpagerecognitionSection;
        $this->container['eEzsigntemplatedocumentpagerecognitionSection'] = $eEzsigntemplatedocumentpagerecognitionSection;

        return $this;
    }

    /**
     * Gets iEzsigntemplatedocumentpagerecognitionSimilarpercentage
     *
     * @return int|null
     */
    public function getIEzsigntemplatedocumentpagerecognitionSimilarpercentage()
    {
        return $this->container['iEzsigntemplatedocumentpagerecognitionSimilarpercentage'];
    }

    /**
     * Sets iEzsigntemplatedocumentpagerecognitionSimilarpercentage
     *
     * @param int|null $iEzsigntemplatedocumentpagerecognitionSimilarpercentage The similarpercentage of the Ezsigntemplatedocumentpagerecognition
     *
     * @return self
     */
    public function setIEzsigntemplatedocumentpagerecognitionSimilarpercentage($iEzsigntemplatedocumentpagerecognitionSimilarpercentage)
    {
	//Openapi doesn't allow to set a variable to null when it's defined as Non-nullable even if it is the normal way of unsetting a variable
        //if (is_null($iEzsigntemplatedocumentpagerecognitionSimilarpercentage)) {
            //throw new \InvalidArgumentException('non-nullable iEzsigntemplatedocumentpagerecognitionSimilarpercentage cannot be null');
        //}

//        if (($iEzsigntemplatedocumentpagerecognitionSimilarpercentage > 100)) {
        if (!is_null($iEzsigntemplatedocumentpagerecognitionSimilarpercentage) && ($iEzsigntemplatedocumentpagerecognitionSimilarpercentage > 100)) {
            throw new \InvalidArgumentException('invalid value '.(is_null($iEzsigntemplatedocumentpagerecognitionSimilarpercentage)?'null':'"'.$iEzsigntemplatedocumentpagerecognitionSimilarpercentage.'"').' for iEzsigntemplatedocumentpagerecognitionSimilarpercentage when calling EzsigntemplatedocumentpagerecognitionResponse., must be smaller than or equal to 100.');
        }
//        if (($iEzsigntemplatedocumentpagerecognitionSimilarpercentage < 60)) {
        if (!is_null($iEzsigntemplatedocumentpagerecognitionSimilarpercentage) && ($iEzsigntemplatedocumentpagerecognitionSimilarpercentage < 60)) {
            throw new \InvalidArgumentException('invalid value '.(is_null($iEzsigntemplatedocumentpagerecognitionSimilarpercentage)?'null':'"'.$iEzsigntemplatedocumentpagerecognitionSimilarpercentage.'"').' for iEzsigntemplatedocumentpagerecognitionSimilarpercentage when calling EzsigntemplatedocumentpagerecognitionResponse., must be bigger than or equal to 60.');
        }

        
	//Openapi doesn't cast variable so if you set a value to "1" instead of 1 in a int, it's not casted automatically
	//$this->container['iEzsigntemplatedocumentpagerecognitionSimilarpercentage'] = $iEzsigntemplatedocumentpagerecognitionSimilarpercentage;
        $this->container['iEzsigntemplatedocumentpagerecognitionSimilarpercentage'] = (is_null($iEzsigntemplatedocumentpagerecognitionSimilarpercentage) ? null : (int) $iEzsigntemplatedocumentpagerecognitionSimilarpercentage);

        return $this;
    }

    /**
     * Gets iEzsigntemplatedocumentpagerecognitionX
     *
     * @return int|null
     */
    public function getIEzsigntemplatedocumentpagerecognitionX()
    {
        return $this->container['iEzsigntemplatedocumentpagerecognitionX'];
    }

    /**
     * Sets iEzsigntemplatedocumentpagerecognitionX
     *
     * @param int|null $iEzsigntemplatedocumentpagerecognitionX The x of the Ezsigntemplatedocumentpagerecognition
     *
     * @return self
     */
    public function setIEzsigntemplatedocumentpagerecognitionX($iEzsigntemplatedocumentpagerecognitionX)
    {
	//Openapi doesn't allow to set a variable to null when it's defined as Non-nullable even if it is the normal way of unsetting a variable
        //if (is_null($iEzsigntemplatedocumentpagerecognitionX)) {
            //throw new \InvalidArgumentException('non-nullable iEzsigntemplatedocumentpagerecognitionX cannot be null');
        //}

//        if (($iEzsigntemplatedocumentpagerecognitionX > 65535)) {
        if (!is_null($iEzsigntemplatedocumentpagerecognitionX) && ($iEzsigntemplatedocumentpagerecognitionX > 65535)) {
            throw new \InvalidArgumentException('invalid value '.(is_null($iEzsigntemplatedocumentpagerecognitionX)?'null':'"'.$iEzsigntemplatedocumentpagerecognitionX.'"').' for iEzsigntemplatedocumentpagerecognitionX when calling EzsigntemplatedocumentpagerecognitionResponse., must be smaller than or equal to 65535.');
        }
//        if (($iEzsigntemplatedocumentpagerecognitionX < 0)) {
        if (!is_null($iEzsigntemplatedocumentpagerecognitionX) && ($iEzsigntemplatedocumentpagerecognitionX < 0)) {
            throw new \InvalidArgumentException('invalid value '.(is_null($iEzsigntemplatedocumentpagerecognitionX)?'null':'"'.$iEzsigntemplatedocumentpagerecognitionX.'"').' for iEzsigntemplatedocumentpagerecognitionX when calling EzsigntemplatedocumentpagerecognitionResponse., must be bigger than or equal to 0.');
        }

        
	//Openapi doesn't cast variable so if you set a value to "1" instead of 1 in a int, it's not casted automatically
	//$this->container['iEzsigntemplatedocumentpagerecognitionX'] = $iEzsigntemplatedocumentpagerecognitionX;
        $this->container['iEzsigntemplatedocumentpagerecognitionX'] = (is_null($iEzsigntemplatedocumentpagerecognitionX) ? null : (int) $iEzsigntemplatedocumentpagerecognitionX);

        return $this;
    }

    /**
     * Gets iEzsigntemplatedocumentpagerecognitionY
     *
     * @return int|null
     */
    public function getIEzsigntemplatedocumentpagerecognitionY()
    {
        return $this->container['iEzsigntemplatedocumentpagerecognitionY'];
    }

    /**
     * Sets iEzsigntemplatedocumentpagerecognitionY
     *
     * @param int|null $iEzsigntemplatedocumentpagerecognitionY The y of the Ezsigntemplatedocumentpagerecognition
     *
     * @return self
     */
    public function setIEzsigntemplatedocumentpagerecognitionY($iEzsigntemplatedocumentpagerecognitionY)
    {
	//Openapi doesn't allow to set a variable to null when it's defined as Non-nullable even if it is the normal way of unsetting a variable
        //if (is_null($iEzsigntemplatedocumentpagerecognitionY)) {
            //throw new \InvalidArgumentException('non-nullable iEzsigntemplatedocumentpagerecognitionY cannot be null');
        //}

//        if (($iEzsigntemplatedocumentpagerecognitionY > 65535)) {
        if (!is_null($iEzsigntemplatedocumentpagerecognitionY) && ($iEzsigntemplatedocumentpagerecognitionY > 65535)) {
            throw new \InvalidArgumentException('invalid value '.(is_null($iEzsigntemplatedocumentpagerecognitionY)?'null':'"'.$iEzsigntemplatedocumentpagerecognitionY.'"').' for iEzsigntemplatedocumentpagerecognitionY when calling EzsigntemplatedocumentpagerecognitionResponse., must be smaller than or equal to 65535.');
        }
//        if (($iEzsigntemplatedocumentpagerecognitionY < 0)) {
        if (!is_null($iEzsigntemplatedocumentpagerecognitionY) && ($iEzsigntemplatedocumentpagerecognitionY < 0)) {
            throw new \InvalidArgumentException('invalid value '.(is_null($iEzsigntemplatedocumentpagerecognitionY)?'null':'"'.$iEzsigntemplatedocumentpagerecognitionY.'"').' for iEzsigntemplatedocumentpagerecognitionY when calling EzsigntemplatedocumentpagerecognitionResponse., must be bigger than or equal to 0.');
        }

        
	//Openapi doesn't cast variable so if you set a value to "1" instead of 1 in a int, it's not casted automatically
	//$this->container['iEzsigntemplatedocumentpagerecognitionY'] = $iEzsigntemplatedocumentpagerecognitionY;
        $this->container['iEzsigntemplatedocumentpagerecognitionY'] = (is_null($iEzsigntemplatedocumentpagerecognitionY) ? null : (int) $iEzsigntemplatedocumentpagerecognitionY);

        return $this;
    }

    /**
     * Gets iEzsigntemplatedocumentpagerecognitionWidth
     *
     * @return int|null
     */
    public function getIEzsigntemplatedocumentpagerecognitionWidth()
    {
        return $this->container['iEzsigntemplatedocumentpagerecognitionWidth'];
    }

    /**
     * Sets iEzsigntemplatedocumentpagerecognitionWidth
     *
     * @param int|null $iEzsigntemplatedocumentpagerecognitionWidth The width of the Ezsigntemplatedocumentpagerecognition
     *
     * @return self
     */
    public function setIEzsigntemplatedocumentpagerecognitionWidth($iEzsigntemplatedocumentpagerecognitionWidth)
    {
	//Openapi doesn't allow to set a variable to null when it's defined as Non-nullable even if it is the normal way of unsetting a variable
        //if (is_null($iEzsigntemplatedocumentpagerecognitionWidth)) {
            //throw new \InvalidArgumentException('non-nullable iEzsigntemplatedocumentpagerecognitionWidth cannot be null');
        //}

//        if (($iEzsigntemplatedocumentpagerecognitionWidth > 65535)) {
        if (!is_null($iEzsigntemplatedocumentpagerecognitionWidth) && ($iEzsigntemplatedocumentpagerecognitionWidth > 65535)) {
            throw new \InvalidArgumentException('invalid value '.(is_null($iEzsigntemplatedocumentpagerecognitionWidth)?'null':'"'.$iEzsigntemplatedocumentpagerecognitionWidth.'"').' for iEzsigntemplatedocumentpagerecognitionWidth when calling EzsigntemplatedocumentpagerecognitionResponse., must be smaller than or equal to 65535.');
        }
//        if (($iEzsigntemplatedocumentpagerecognitionWidth < 0)) {
        if (!is_null($iEzsigntemplatedocumentpagerecognitionWidth) && ($iEzsigntemplatedocumentpagerecognitionWidth < 0)) {
            throw new \InvalidArgumentException('invalid value '.(is_null($iEzsigntemplatedocumentpagerecognitionWidth)?'null':'"'.$iEzsigntemplatedocumentpagerecognitionWidth.'"').' for iEzsigntemplatedocumentpagerecognitionWidth when calling EzsigntemplatedocumentpagerecognitionResponse., must be bigger than or equal to 0.');
        }

        
	//Openapi doesn't cast variable so if you set a value to "1" instead of 1 in a int, it's not casted automatically
	//$this->container['iEzsigntemplatedocumentpagerecognitionWidth'] = $iEzsigntemplatedocumentpagerecognitionWidth;
        $this->container['iEzsigntemplatedocumentpagerecognitionWidth'] = (is_null($iEzsigntemplatedocumentpagerecognitionWidth) ? null : (int) $iEzsigntemplatedocumentpagerecognitionWidth);

        return $this;
    }

    /**
     * Gets iEzsigntemplatedocumentpagerecognitionHeight
     *
     * @return int|null
     */
    public function getIEzsigntemplatedocumentpagerecognitionHeight()
    {
        return $this->container['iEzsigntemplatedocumentpagerecognitionHeight'];
    }

    /**
     * Sets iEzsigntemplatedocumentpagerecognitionHeight
     *
     * @param int|null $iEzsigntemplatedocumentpagerecognitionHeight The height of the Ezsigntemplatedocumentpagerecognition
     *
     * @return self
     */
    public function setIEzsigntemplatedocumentpagerecognitionHeight($iEzsigntemplatedocumentpagerecognitionHeight)
    {
	//Openapi doesn't allow to set a variable to null when it's defined as Non-nullable even if it is the normal way of unsetting a variable
        //if (is_null($iEzsigntemplatedocumentpagerecognitionHeight)) {
            //throw new \InvalidArgumentException('non-nullable iEzsigntemplatedocumentpagerecognitionHeight cannot be null');
        //}

//        if (($iEzsigntemplatedocumentpagerecognitionHeight > 65535)) {
        if (!is_null($iEzsigntemplatedocumentpagerecognitionHeight) && ($iEzsigntemplatedocumentpagerecognitionHeight > 65535)) {
            throw new \InvalidArgumentException('invalid value '.(is_null($iEzsigntemplatedocumentpagerecognitionHeight)?'null':'"'.$iEzsigntemplatedocumentpagerecognitionHeight.'"').' for iEzsigntemplatedocumentpagerecognitionHeight when calling EzsigntemplatedocumentpagerecognitionResponse., must be smaller than or equal to 65535.');
        }
//        if (($iEzsigntemplatedocumentpagerecognitionHeight < 0)) {
        if (!is_null($iEzsigntemplatedocumentpagerecognitionHeight) && ($iEzsigntemplatedocumentpagerecognitionHeight < 0)) {
            throw new \InvalidArgumentException('invalid value '.(is_null($iEzsigntemplatedocumentpagerecognitionHeight)?'null':'"'.$iEzsigntemplatedocumentpagerecognitionHeight.'"').' for iEzsigntemplatedocumentpagerecognitionHeight when calling EzsigntemplatedocumentpagerecognitionResponse., must be bigger than or equal to 0.');
        }

        
	//Openapi doesn't cast variable so if you set a value to "1" instead of 1 in a int, it's not casted automatically
	//$this->container['iEzsigntemplatedocumentpagerecognitionHeight'] = $iEzsigntemplatedocumentpagerecognitionHeight;
        $this->container['iEzsigntemplatedocumentpagerecognitionHeight'] = (is_null($iEzsigntemplatedocumentpagerecognitionHeight) ? null : (int) $iEzsigntemplatedocumentpagerecognitionHeight);

        return $this;
    }

    /**
     * Gets tEzsigntemplatedocumentpagerecognitionText
     *
     * @return string
     */
    public function getTEzsigntemplatedocumentpagerecognitionText()
    {
        return is_null($this->container['tEzsigntemplatedocumentpagerecognitionText']) ? null : trim($this->container['tEzsigntemplatedocumentpagerecognitionText']);
    }

    /**
     * Sets tEzsigntemplatedocumentpagerecognitionText
     *
     * @param string $tEzsigntemplatedocumentpagerecognitionText The text of the Ezsigntemplatedocumentpagerecognition
     *
     * @return self
     */
    public function setTEzsigntemplatedocumentpagerecognitionText($tEzsigntemplatedocumentpagerecognitionText)
    {
	//Openapi doesn't allow to set a variable to null when it's defined as Non-nullable even if it is the normal way of unsetting a variable
        //if (is_null($tEzsigntemplatedocumentpagerecognitionText)) {
            //throw new \InvalidArgumentException('non-nullable tEzsigntemplatedocumentpagerecognitionText cannot be null');
        //}

//        if ((!preg_match("/^[.\\D\\d]{0,65535}$/", ObjectSerializer::toString($tEzsigntemplatedocumentpagerecognitionText)))) {
        if (!is_null($tEzsigntemplatedocumentpagerecognitionText) && (!preg_match("/(*UTF8)^[.\\D\\d]{0,65535}$/", ObjectSerializer::toString($tEzsigntemplatedocumentpagerecognitionText)))) {
            throw new \InvalidArgumentException("invalid value ".(is_null($tEzsigntemplatedocumentpagerecognitionText)?'null':'"'.$tEzsigntemplatedocumentpagerecognitionText.'"')." for tEzsigntemplatedocumentpagerecognitionText when calling EzsigntemplatedocumentpagerecognitionResponse., must conform to the pattern /^[.\\D\\d]{0,65535}$/.");
        }

        
	//Openapi doesn't cast variable so if you set a value to "1" instead of 1 in a int, it's not casted automatically
	//$this->container['tEzsigntemplatedocumentpagerecognitionText'] = $tEzsigntemplatedocumentpagerecognitionText;
        $this->container['tEzsigntemplatedocumentpagerecognitionText'] = (is_null($tEzsigntemplatedocumentpagerecognitionText) ? null : trim((string) $tEzsigntemplatedocumentpagerecognitionText));

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


