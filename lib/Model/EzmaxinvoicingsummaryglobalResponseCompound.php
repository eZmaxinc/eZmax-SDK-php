<?php
/**
 * EzmaxinvoicingsummaryglobalResponseCompound
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  eZmaxAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.16
 * Contact: support-api@ezmax.ca
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.1.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace eZmaxAPI\Model;

use \ArrayAccess;
use \eZmaxAPI\ObjectSerializer;

/**
 * EzmaxinvoicingsummaryglobalResponseCompound Class Doc Comment
 *
 * @category Class
 * @description A Ezmaxinvoicingsummaryglobal Object
 * @package  eZmaxAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class EzmaxinvoicingsummaryglobalResponseCompound implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ezmaxinvoicingsummaryglobal-ResponseCompound';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'pkiEzmaxinvoicingsummaryglobalID' => 'int',
        'fkiEzmaxinvoicingID' => 'int',
        'fkiEzmaxproductID' => 'int',
        'sEzmaxproductDescriptionX' => 'string',
        'dtEzmaxinvoicingsummaryglobalStart' => 'string',
        'dtEzmaxinvoicingsummaryglobalEnd' => 'string',
        'iEzmaxinvoicingsummaryglobalDays' => 'int',
        'dEzmaxinvoicingsummaryglobalCountreal' => 'string',
        'dEzmaxinvoicingsummaryglobalCountbilled' => 'string',
        'dEzmaxinvoicingsummaryglobalSubtotal' => 'string',
        'dEzmaxinvoicingsummaryglobalRebateamount' => 'string',
        'dEzmaxinvoicingsummaryglobalRebatepercent' => 'string',
        'dEzmaxinvoicingsummaryglobalRebatetotal' => 'string',
        'dEzmaxinvoicingsummaryglobalTotal' => 'string',
        'dEzmaxinvoicingsummaryglobalRepresentative' => 'string',
        'dEzmaxinvoicingsummaryglobalPartner' => 'string',
        'dEzmaxinvoicingsummaryglobalNet' => 'string',
        'bEzmaxinvoicingsummaryglobalAdjustment' => 'bool',
        'aObjEzmaxinvoicingcommission' => '\eZmaxAPI\Model\EzmaxinvoicingcommissionResponseCompound[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'pkiEzmaxinvoicingsummaryglobalID' => null,
        'fkiEzmaxinvoicingID' => null,
        'fkiEzmaxproductID' => null,
        'sEzmaxproductDescriptionX' => null,
        'dtEzmaxinvoicingsummaryglobalStart' => null,
        'dtEzmaxinvoicingsummaryglobalEnd' => null,
        'iEzmaxinvoicingsummaryglobalDays' => null,
        'dEzmaxinvoicingsummaryglobalCountreal' => null,
        'dEzmaxinvoicingsummaryglobalCountbilled' => null,
        'dEzmaxinvoicingsummaryglobalSubtotal' => null,
        'dEzmaxinvoicingsummaryglobalRebateamount' => null,
        'dEzmaxinvoicingsummaryglobalRebatepercent' => null,
        'dEzmaxinvoicingsummaryglobalRebatetotal' => null,
        'dEzmaxinvoicingsummaryglobalTotal' => null,
        'dEzmaxinvoicingsummaryglobalRepresentative' => null,
        'dEzmaxinvoicingsummaryglobalPartner' => null,
        'dEzmaxinvoicingsummaryglobalNet' => null,
        'bEzmaxinvoicingsummaryglobalAdjustment' => null,
        'aObjEzmaxinvoicingcommission' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'pkiEzmaxinvoicingsummaryglobalID' => false,
		'fkiEzmaxinvoicingID' => false,
		'fkiEzmaxproductID' => false,
		'sEzmaxproductDescriptionX' => false,
		'dtEzmaxinvoicingsummaryglobalStart' => false,
		'dtEzmaxinvoicingsummaryglobalEnd' => false,
		'iEzmaxinvoicingsummaryglobalDays' => false,
		'dEzmaxinvoicingsummaryglobalCountreal' => false,
		'dEzmaxinvoicingsummaryglobalCountbilled' => false,
		'dEzmaxinvoicingsummaryglobalSubtotal' => false,
		'dEzmaxinvoicingsummaryglobalRebateamount' => false,
		'dEzmaxinvoicingsummaryglobalRebatepercent' => false,
		'dEzmaxinvoicingsummaryglobalRebatetotal' => false,
		'dEzmaxinvoicingsummaryglobalTotal' => false,
		'dEzmaxinvoicingsummaryglobalRepresentative' => false,
		'dEzmaxinvoicingsummaryglobalPartner' => false,
		'dEzmaxinvoicingsummaryglobalNet' => false,
		'bEzmaxinvoicingsummaryglobalAdjustment' => false,
		'aObjEzmaxinvoicingcommission' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'pkiEzmaxinvoicingsummaryglobalID' => 'pkiEzmaxinvoicingsummaryglobalID',
        'fkiEzmaxinvoicingID' => 'fkiEzmaxinvoicingID',
        'fkiEzmaxproductID' => 'fkiEzmaxproductID',
        'sEzmaxproductDescriptionX' => 'sEzmaxproductDescriptionX',
        'dtEzmaxinvoicingsummaryglobalStart' => 'dtEzmaxinvoicingsummaryglobalStart',
        'dtEzmaxinvoicingsummaryglobalEnd' => 'dtEzmaxinvoicingsummaryglobalEnd',
        'iEzmaxinvoicingsummaryglobalDays' => 'iEzmaxinvoicingsummaryglobalDays',
        'dEzmaxinvoicingsummaryglobalCountreal' => 'dEzmaxinvoicingsummaryglobalCountreal',
        'dEzmaxinvoicingsummaryglobalCountbilled' => 'dEzmaxinvoicingsummaryglobalCountbilled',
        'dEzmaxinvoicingsummaryglobalSubtotal' => 'dEzmaxinvoicingsummaryglobalSubtotal',
        'dEzmaxinvoicingsummaryglobalRebateamount' => 'dEzmaxinvoicingsummaryglobalRebateamount',
        'dEzmaxinvoicingsummaryglobalRebatepercent' => 'dEzmaxinvoicingsummaryglobalRebatepercent',
        'dEzmaxinvoicingsummaryglobalRebatetotal' => 'dEzmaxinvoicingsummaryglobalRebatetotal',
        'dEzmaxinvoicingsummaryglobalTotal' => 'dEzmaxinvoicingsummaryglobalTotal',
        'dEzmaxinvoicingsummaryglobalRepresentative' => 'dEzmaxinvoicingsummaryglobalRepresentative',
        'dEzmaxinvoicingsummaryglobalPartner' => 'dEzmaxinvoicingsummaryglobalPartner',
        'dEzmaxinvoicingsummaryglobalNet' => 'dEzmaxinvoicingsummaryglobalNet',
        'bEzmaxinvoicingsummaryglobalAdjustment' => 'bEzmaxinvoicingsummaryglobalAdjustment',
        'aObjEzmaxinvoicingcommission' => 'a_objEzmaxinvoicingcommission'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'pkiEzmaxinvoicingsummaryglobalID' => 'setPkiEzmaxinvoicingsummaryglobalID',
        'fkiEzmaxinvoicingID' => 'setFkiEzmaxinvoicingID',
        'fkiEzmaxproductID' => 'setFkiEzmaxproductID',
        'sEzmaxproductDescriptionX' => 'setSEzmaxproductDescriptionX',
        'dtEzmaxinvoicingsummaryglobalStart' => 'setDtEzmaxinvoicingsummaryglobalStart',
        'dtEzmaxinvoicingsummaryglobalEnd' => 'setDtEzmaxinvoicingsummaryglobalEnd',
        'iEzmaxinvoicingsummaryglobalDays' => 'setIEzmaxinvoicingsummaryglobalDays',
        'dEzmaxinvoicingsummaryglobalCountreal' => 'setDEzmaxinvoicingsummaryglobalCountreal',
        'dEzmaxinvoicingsummaryglobalCountbilled' => 'setDEzmaxinvoicingsummaryglobalCountbilled',
        'dEzmaxinvoicingsummaryglobalSubtotal' => 'setDEzmaxinvoicingsummaryglobalSubtotal',
        'dEzmaxinvoicingsummaryglobalRebateamount' => 'setDEzmaxinvoicingsummaryglobalRebateamount',
        'dEzmaxinvoicingsummaryglobalRebatepercent' => 'setDEzmaxinvoicingsummaryglobalRebatepercent',
        'dEzmaxinvoicingsummaryglobalRebatetotal' => 'setDEzmaxinvoicingsummaryglobalRebatetotal',
        'dEzmaxinvoicingsummaryglobalTotal' => 'setDEzmaxinvoicingsummaryglobalTotal',
        'dEzmaxinvoicingsummaryglobalRepresentative' => 'setDEzmaxinvoicingsummaryglobalRepresentative',
        'dEzmaxinvoicingsummaryglobalPartner' => 'setDEzmaxinvoicingsummaryglobalPartner',
        'dEzmaxinvoicingsummaryglobalNet' => 'setDEzmaxinvoicingsummaryglobalNet',
        'bEzmaxinvoicingsummaryglobalAdjustment' => 'setBEzmaxinvoicingsummaryglobalAdjustment',
        'aObjEzmaxinvoicingcommission' => 'setAObjEzmaxinvoicingcommission'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'pkiEzmaxinvoicingsummaryglobalID' => 'getPkiEzmaxinvoicingsummaryglobalID',
        'fkiEzmaxinvoicingID' => 'getFkiEzmaxinvoicingID',
        'fkiEzmaxproductID' => 'getFkiEzmaxproductID',
        'sEzmaxproductDescriptionX' => 'getSEzmaxproductDescriptionX',
        'dtEzmaxinvoicingsummaryglobalStart' => 'getDtEzmaxinvoicingsummaryglobalStart',
        'dtEzmaxinvoicingsummaryglobalEnd' => 'getDtEzmaxinvoicingsummaryglobalEnd',
        'iEzmaxinvoicingsummaryglobalDays' => 'getIEzmaxinvoicingsummaryglobalDays',
        'dEzmaxinvoicingsummaryglobalCountreal' => 'getDEzmaxinvoicingsummaryglobalCountreal',
        'dEzmaxinvoicingsummaryglobalCountbilled' => 'getDEzmaxinvoicingsummaryglobalCountbilled',
        'dEzmaxinvoicingsummaryglobalSubtotal' => 'getDEzmaxinvoicingsummaryglobalSubtotal',
        'dEzmaxinvoicingsummaryglobalRebateamount' => 'getDEzmaxinvoicingsummaryglobalRebateamount',
        'dEzmaxinvoicingsummaryglobalRebatepercent' => 'getDEzmaxinvoicingsummaryglobalRebatepercent',
        'dEzmaxinvoicingsummaryglobalRebatetotal' => 'getDEzmaxinvoicingsummaryglobalRebatetotal',
        'dEzmaxinvoicingsummaryglobalTotal' => 'getDEzmaxinvoicingsummaryglobalTotal',
        'dEzmaxinvoicingsummaryglobalRepresentative' => 'getDEzmaxinvoicingsummaryglobalRepresentative',
        'dEzmaxinvoicingsummaryglobalPartner' => 'getDEzmaxinvoicingsummaryglobalPartner',
        'dEzmaxinvoicingsummaryglobalNet' => 'getDEzmaxinvoicingsummaryglobalNet',
        'bEzmaxinvoicingsummaryglobalAdjustment' => 'getBEzmaxinvoicingsummaryglobalAdjustment',
        'aObjEzmaxinvoicingcommission' => 'getAObjEzmaxinvoicingcommission'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('pkiEzmaxinvoicingsummaryglobalID', $data ?? [], null);
        $this->setIfExists('fkiEzmaxinvoicingID', $data ?? [], null);
        $this->setIfExists('fkiEzmaxproductID', $data ?? [], null);
        $this->setIfExists('sEzmaxproductDescriptionX', $data ?? [], null);
        $this->setIfExists('dtEzmaxinvoicingsummaryglobalStart', $data ?? [], null);
        $this->setIfExists('dtEzmaxinvoicingsummaryglobalEnd', $data ?? [], null);
        $this->setIfExists('iEzmaxinvoicingsummaryglobalDays', $data ?? [], null);
        $this->setIfExists('dEzmaxinvoicingsummaryglobalCountreal', $data ?? [], null);
        $this->setIfExists('dEzmaxinvoicingsummaryglobalCountbilled', $data ?? [], null);
        $this->setIfExists('dEzmaxinvoicingsummaryglobalSubtotal', $data ?? [], null);
        $this->setIfExists('dEzmaxinvoicingsummaryglobalRebateamount', $data ?? [], null);
        $this->setIfExists('dEzmaxinvoicingsummaryglobalRebatepercent', $data ?? [], null);
        $this->setIfExists('dEzmaxinvoicingsummaryglobalRebatetotal', $data ?? [], null);
        $this->setIfExists('dEzmaxinvoicingsummaryglobalTotal', $data ?? [], null);
        $this->setIfExists('dEzmaxinvoicingsummaryglobalRepresentative', $data ?? [], null);
        $this->setIfExists('dEzmaxinvoicingsummaryglobalPartner', $data ?? [], null);
        $this->setIfExists('dEzmaxinvoicingsummaryglobalNet', $data ?? [], null);
        $this->setIfExists('bEzmaxinvoicingsummaryglobalAdjustment', $data ?? [], null);
        $this->setIfExists('aObjEzmaxinvoicingcommission', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['pkiEzmaxinvoicingsummaryglobalID']) && ($this->container['pkiEzmaxinvoicingsummaryglobalID'] < 0)) {
            $invalidProperties[] = "invalid value for 'pkiEzmaxinvoicingsummaryglobalID', must be bigger than or equal to 0.";
        }

        if (!is_null($this->container['fkiEzmaxinvoicingID']) && ($this->container['fkiEzmaxinvoicingID'] < 0)) {
            $invalidProperties[] = "invalid value for 'fkiEzmaxinvoicingID', must be bigger than or equal to 0.";
        }

        if ($this->container['fkiEzmaxproductID'] === null) {
            $invalidProperties[] = "'fkiEzmaxproductID' can't be null";
        }
        if (($this->container['fkiEzmaxproductID'] < 1)) {
            $invalidProperties[] = "invalid value for 'fkiEzmaxproductID', must be bigger than or equal to 1.";
        }

        if ($this->container['sEzmaxproductDescriptionX'] === null) {
            $invalidProperties[] = "'sEzmaxproductDescriptionX' can't be null";
        }
        if ($this->container['dtEzmaxinvoicingsummaryglobalStart'] === null) {
            $invalidProperties[] = "'dtEzmaxinvoicingsummaryglobalStart' can't be null";
        }
        if ($this->container['dtEzmaxinvoicingsummaryglobalEnd'] === null) {
            $invalidProperties[] = "'dtEzmaxinvoicingsummaryglobalEnd' can't be null";
        }
        if ($this->container['iEzmaxinvoicingsummaryglobalDays'] === null) {
            $invalidProperties[] = "'iEzmaxinvoicingsummaryglobalDays' can't be null";
        }
        if (($this->container['iEzmaxinvoicingsummaryglobalDays'] < 1)) {
            $invalidProperties[] = "invalid value for 'iEzmaxinvoicingsummaryglobalDays', must be bigger than or equal to 1.";
        }

        if ($this->container['dEzmaxinvoicingsummaryglobalCountreal'] === null) {
            $invalidProperties[] = "'dEzmaxinvoicingsummaryglobalCountreal' can't be null";
        }
        if (!preg_match("/^-{0,1}[\\d]{1,6}?\\.[\\d]{2}$/", $this->container['dEzmaxinvoicingsummaryglobalCountreal'])) {
            $invalidProperties[] = "invalid value for 'dEzmaxinvoicingsummaryglobalCountreal', must be conform to the pattern /^-{0,1}[\\d]{1,6}?\\.[\\d]{2}$/.";
        }

        if ($this->container['dEzmaxinvoicingsummaryglobalCountbilled'] === null) {
            $invalidProperties[] = "'dEzmaxinvoicingsummaryglobalCountbilled' can't be null";
        }
        if (!preg_match("/^-{0,1}[\\d]{1,6}?\\.[\\d]{2}$/", $this->container['dEzmaxinvoicingsummaryglobalCountbilled'])) {
            $invalidProperties[] = "invalid value for 'dEzmaxinvoicingsummaryglobalCountbilled', must be conform to the pattern /^-{0,1}[\\d]{1,6}?\\.[\\d]{2}$/.";
        }

        if ($this->container['dEzmaxinvoicingsummaryglobalSubtotal'] === null) {
            $invalidProperties[] = "'dEzmaxinvoicingsummaryglobalSubtotal' can't be null";
        }
        if (!preg_match("/^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/", $this->container['dEzmaxinvoicingsummaryglobalSubtotal'])) {
            $invalidProperties[] = "invalid value for 'dEzmaxinvoicingsummaryglobalSubtotal', must be conform to the pattern /^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/.";
        }

        if ($this->container['dEzmaxinvoicingsummaryglobalRebateamount'] === null) {
            $invalidProperties[] = "'dEzmaxinvoicingsummaryglobalRebateamount' can't be null";
        }
        if (!preg_match("/^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/", $this->container['dEzmaxinvoicingsummaryglobalRebateamount'])) {
            $invalidProperties[] = "invalid value for 'dEzmaxinvoicingsummaryglobalRebateamount', must be conform to the pattern /^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/.";
        }

        if ($this->container['dEzmaxinvoicingsummaryglobalRebatepercent'] === null) {
            $invalidProperties[] = "'dEzmaxinvoicingsummaryglobalRebatepercent' can't be null";
        }
        if (!preg_match("/^-{0,1}[\\d]{1,3}?\\.[\\d]{2}$/", $this->container['dEzmaxinvoicingsummaryglobalRebatepercent'])) {
            $invalidProperties[] = "invalid value for 'dEzmaxinvoicingsummaryglobalRebatepercent', must be conform to the pattern /^-{0,1}[\\d]{1,3}?\\.[\\d]{2}$/.";
        }

        if ($this->container['dEzmaxinvoicingsummaryglobalRebatetotal'] === null) {
            $invalidProperties[] = "'dEzmaxinvoicingsummaryglobalRebatetotal' can't be null";
        }
        if (!preg_match("/^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/", $this->container['dEzmaxinvoicingsummaryglobalRebatetotal'])) {
            $invalidProperties[] = "invalid value for 'dEzmaxinvoicingsummaryglobalRebatetotal', must be conform to the pattern /^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/.";
        }

        if ($this->container['dEzmaxinvoicingsummaryglobalTotal'] === null) {
            $invalidProperties[] = "'dEzmaxinvoicingsummaryglobalTotal' can't be null";
        }
        if (!preg_match("/^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/", $this->container['dEzmaxinvoicingsummaryglobalTotal'])) {
            $invalidProperties[] = "invalid value for 'dEzmaxinvoicingsummaryglobalTotal', must be conform to the pattern /^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/.";
        }

        if (!is_null($this->container['dEzmaxinvoicingsummaryglobalRepresentative']) && !preg_match("/^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/", $this->container['dEzmaxinvoicingsummaryglobalRepresentative'])) {
            $invalidProperties[] = "invalid value for 'dEzmaxinvoicingsummaryglobalRepresentative', must be conform to the pattern /^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/.";
        }

        if (!is_null($this->container['dEzmaxinvoicingsummaryglobalPartner']) && !preg_match("/^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/", $this->container['dEzmaxinvoicingsummaryglobalPartner'])) {
            $invalidProperties[] = "invalid value for 'dEzmaxinvoicingsummaryglobalPartner', must be conform to the pattern /^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/.";
        }

        if (!is_null($this->container['dEzmaxinvoicingsummaryglobalNet']) && !preg_match("/^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/", $this->container['dEzmaxinvoicingsummaryglobalNet'])) {
            $invalidProperties[] = "invalid value for 'dEzmaxinvoicingsummaryglobalNet', must be conform to the pattern /^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/.";
        }

        if ($this->container['bEzmaxinvoicingsummaryglobalAdjustment'] === null) {
            $invalidProperties[] = "'bEzmaxinvoicingsummaryglobalAdjustment' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets pkiEzmaxinvoicingsummaryglobalID
     *
     * @return int|null
     */
    public function getPkiEzmaxinvoicingsummaryglobalID()
    {
        return $this->container['pkiEzmaxinvoicingsummaryglobalID'];
    }

    /**
     * Sets pkiEzmaxinvoicingsummaryglobalID
     *
     * @param int|null $pkiEzmaxinvoicingsummaryglobalID The unique ID of the Ezmaxinvoicingsummaryglobal
     *
     * @return self
     */
    public function setPkiEzmaxinvoicingsummaryglobalID($pkiEzmaxinvoicingsummaryglobalID)
    {

        if (!is_null($pkiEzmaxinvoicingsummaryglobalID) && ($pkiEzmaxinvoicingsummaryglobalID < 0)) {
            throw new \InvalidArgumentException('invalid value for $pkiEzmaxinvoicingsummaryglobalID when calling EzmaxinvoicingsummaryglobalResponseCompound., must be bigger than or equal to 0.');
        }


        //if (is_null($pkiEzmaxinvoicingsummaryglobalID)) {
            //throw new \InvalidArgumentException('non-nullable pkiEzmaxinvoicingsummaryglobalID cannot be null');
        //}
        $this->container['pkiEzmaxinvoicingsummaryglobalID'] = (is_null($pkiEzmaxinvoicingsummaryglobalID) ? null : (int) $pkiEzmaxinvoicingsummaryglobalID);

        return $this;
    }

    /**
     * Gets fkiEzmaxinvoicingID
     *
     * @return int|null
     */
    public function getFkiEzmaxinvoicingID()
    {
        return $this->container['fkiEzmaxinvoicingID'];
    }

    /**
     * Sets fkiEzmaxinvoicingID
     *
     * @param int|null $fkiEzmaxinvoicingID The unique ID of the Ezmaxinvoicing
     *
     * @return self
     */
    public function setFkiEzmaxinvoicingID($fkiEzmaxinvoicingID)
    {

        if (!is_null($fkiEzmaxinvoicingID) && ($fkiEzmaxinvoicingID < 0)) {
            throw new \InvalidArgumentException('invalid value for $fkiEzmaxinvoicingID when calling EzmaxinvoicingsummaryglobalResponseCompound., must be bigger than or equal to 0.');
        }


        //if (is_null($fkiEzmaxinvoicingID)) {
            //throw new \InvalidArgumentException('non-nullable fkiEzmaxinvoicingID cannot be null');
        //}
        $this->container['fkiEzmaxinvoicingID'] = (is_null($fkiEzmaxinvoicingID) ? null : (int) $fkiEzmaxinvoicingID);

        return $this;
    }

    /**
     * Gets fkiEzmaxproductID
     *
     * @return int
     */
    public function getFkiEzmaxproductID()
    {
        return $this->container['fkiEzmaxproductID'];
    }

    /**
     * Sets fkiEzmaxproductID
     *
     * @param int $fkiEzmaxproductID The unique ID of the Ezmaxproduct
     *
     * @return self
     */
    public function setFkiEzmaxproductID($fkiEzmaxproductID)
    {

        if (($fkiEzmaxproductID < 1)) {
            throw new \InvalidArgumentException('invalid value for $fkiEzmaxproductID when calling EzmaxinvoicingsummaryglobalResponseCompound., must be bigger than or equal to 1.');
        }


        //if (is_null($fkiEzmaxproductID)) {
            //throw new \InvalidArgumentException('non-nullable fkiEzmaxproductID cannot be null');
        //}
        $this->container['fkiEzmaxproductID'] = (is_null($fkiEzmaxproductID) ? null : (int) $fkiEzmaxproductID);

        return $this;
    }

    /**
     * Gets sEzmaxproductDescriptionX
     *
     * @return string
     */
    public function getSEzmaxproductDescriptionX()
    {
        return $this->container['sEzmaxproductDescriptionX'];
    }

    /**
     * Sets sEzmaxproductDescriptionX
     *
     * @param string $sEzmaxproductDescriptionX The description of the Ezmaxproduct in the language of the requester
     *
     * @return self
     */
    public function setSEzmaxproductDescriptionX($sEzmaxproductDescriptionX)
    {

        //if (is_null($sEzmaxproductDescriptionX)) {
            //throw new \InvalidArgumentException('non-nullable sEzmaxproductDescriptionX cannot be null');
        //}
        $this->container['sEzmaxproductDescriptionX'] = (is_null($sEzmaxproductDescriptionX) ? null : (string) $sEzmaxproductDescriptionX);

        return $this;
    }

    /**
     * Gets dtEzmaxinvoicingsummaryglobalStart
     *
     * @return string
     */
    public function getDtEzmaxinvoicingsummaryglobalStart()
    {
        return $this->container['dtEzmaxinvoicingsummaryglobalStart'];
    }

    /**
     * Sets dtEzmaxinvoicingsummaryglobalStart
     *
     * @param string $dtEzmaxinvoicingsummaryglobalStart The start date for the Ezmaxinvoicingsummaryglobal
     *
     * @return self
     */
    public function setDtEzmaxinvoicingsummaryglobalStart($dtEzmaxinvoicingsummaryglobalStart)
    {

        //if (is_null($dtEzmaxinvoicingsummaryglobalStart)) {
            //throw new \InvalidArgumentException('non-nullable dtEzmaxinvoicingsummaryglobalStart cannot be null');
        //}
        $this->container['dtEzmaxinvoicingsummaryglobalStart'] = (is_null($dtEzmaxinvoicingsummaryglobalStart) ? null : (string) $dtEzmaxinvoicingsummaryglobalStart);

        return $this;
    }

    /**
     * Gets dtEzmaxinvoicingsummaryglobalEnd
     *
     * @return string
     */
    public function getDtEzmaxinvoicingsummaryglobalEnd()
    {
        return $this->container['dtEzmaxinvoicingsummaryglobalEnd'];
    }

    /**
     * Sets dtEzmaxinvoicingsummaryglobalEnd
     *
     * @param string $dtEzmaxinvoicingsummaryglobalEnd The end date for the Ezmaxinvoicingsummaryglobal
     *
     * @return self
     */
    public function setDtEzmaxinvoicingsummaryglobalEnd($dtEzmaxinvoicingsummaryglobalEnd)
    {

        //if (is_null($dtEzmaxinvoicingsummaryglobalEnd)) {
            //throw new \InvalidArgumentException('non-nullable dtEzmaxinvoicingsummaryglobalEnd cannot be null');
        //}
        $this->container['dtEzmaxinvoicingsummaryglobalEnd'] = (is_null($dtEzmaxinvoicingsummaryglobalEnd) ? null : (string) $dtEzmaxinvoicingsummaryglobalEnd);

        return $this;
    }

    /**
     * Gets iEzmaxinvoicingsummaryglobalDays
     *
     * @return int
     */
    public function getIEzmaxinvoicingsummaryglobalDays()
    {
        return $this->container['iEzmaxinvoicingsummaryglobalDays'];
    }

    /**
     * Sets iEzmaxinvoicingsummaryglobalDays
     *
     * @param int $iEzmaxinvoicingsummaryglobalDays The number of days for the Ezmaxinvoicingsummaryglobal
     *
     * @return self
     */
    public function setIEzmaxinvoicingsummaryglobalDays($iEzmaxinvoicingsummaryglobalDays)
    {

        if (($iEzmaxinvoicingsummaryglobalDays < 1)) {
            throw new \InvalidArgumentException('invalid value for $iEzmaxinvoicingsummaryglobalDays when calling EzmaxinvoicingsummaryglobalResponseCompound., must be bigger than or equal to 1.');
        }


        //if (is_null($iEzmaxinvoicingsummaryglobalDays)) {
            //throw new \InvalidArgumentException('non-nullable iEzmaxinvoicingsummaryglobalDays cannot be null');
        //}
        $this->container['iEzmaxinvoicingsummaryglobalDays'] = (is_null($iEzmaxinvoicingsummaryglobalDays) ? null : (int) $iEzmaxinvoicingsummaryglobalDays);

        return $this;
    }

    /**
     * Gets dEzmaxinvoicingsummaryglobalCountreal
     *
     * @return string
     */
    public function getDEzmaxinvoicingsummaryglobalCountreal()
    {
        return $this->container['dEzmaxinvoicingsummaryglobalCountreal'];
    }

    /**
     * Sets dEzmaxinvoicingsummaryglobalCountreal
     *
     * @param string $dEzmaxinvoicingsummaryglobalCountreal The The count item calculated
     *
     * @return self
     */
    public function setDEzmaxinvoicingsummaryglobalCountreal($dEzmaxinvoicingsummaryglobalCountreal)
    {

        if ((!preg_match("/^-{0,1}[\\d]{1,6}?\\.[\\d]{2}$/", $dEzmaxinvoicingsummaryglobalCountreal))) {
            throw new \InvalidArgumentException("invalid value for \$dEzmaxinvoicingsummaryglobalCountreal when calling EzmaxinvoicingsummaryglobalResponseCompound., must conform to the pattern /^-{0,1}[\\d]{1,6}?\\.[\\d]{2}$/.");
        }


        //if (is_null($dEzmaxinvoicingsummaryglobalCountreal)) {
            //throw new \InvalidArgumentException('non-nullable dEzmaxinvoicingsummaryglobalCountreal cannot be null');
        //}
        $this->container['dEzmaxinvoicingsummaryglobalCountreal'] = (is_null($dEzmaxinvoicingsummaryglobalCountreal) ? null : (string) $dEzmaxinvoicingsummaryglobalCountreal);

        return $this;
    }

    /**
     * Gets dEzmaxinvoicingsummaryglobalCountbilled
     *
     * @return string
     */
    public function getDEzmaxinvoicingsummaryglobalCountbilled()
    {
        return $this->container['dEzmaxinvoicingsummaryglobalCountbilled'];
    }

    /**
     * Sets dEzmaxinvoicingsummaryglobalCountbilled
     *
     * @param string $dEzmaxinvoicingsummaryglobalCountbilled The The count item billed
     *
     * @return self
     */
    public function setDEzmaxinvoicingsummaryglobalCountbilled($dEzmaxinvoicingsummaryglobalCountbilled)
    {

        if ((!preg_match("/^-{0,1}[\\d]{1,6}?\\.[\\d]{2}$/", $dEzmaxinvoicingsummaryglobalCountbilled))) {
            throw new \InvalidArgumentException("invalid value for \$dEzmaxinvoicingsummaryglobalCountbilled when calling EzmaxinvoicingsummaryglobalResponseCompound., must conform to the pattern /^-{0,1}[\\d]{1,6}?\\.[\\d]{2}$/.");
        }


        //if (is_null($dEzmaxinvoicingsummaryglobalCountbilled)) {
            //throw new \InvalidArgumentException('non-nullable dEzmaxinvoicingsummaryglobalCountbilled cannot be null');
        //}
        $this->container['dEzmaxinvoicingsummaryglobalCountbilled'] = (is_null($dEzmaxinvoicingsummaryglobalCountbilled) ? null : (string) $dEzmaxinvoicingsummaryglobalCountbilled);

        return $this;
    }

    /**
     * Gets dEzmaxinvoicingsummaryglobalSubtotal
     *
     * @return string
     */
    public function getDEzmaxinvoicingsummaryglobalSubtotal()
    {
        return $this->container['dEzmaxinvoicingsummaryglobalSubtotal'];
    }

    /**
     * Sets dEzmaxinvoicingsummaryglobalSubtotal
     *
     * @param string $dEzmaxinvoicingsummaryglobalSubtotal The Ezmaxinvoicingsummaryglobal subtotal
     *
     * @return self
     */
    public function setDEzmaxinvoicingsummaryglobalSubtotal($dEzmaxinvoicingsummaryglobalSubtotal)
    {

        if ((!preg_match("/^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/", $dEzmaxinvoicingsummaryglobalSubtotal))) {
            throw new \InvalidArgumentException("invalid value for \$dEzmaxinvoicingsummaryglobalSubtotal when calling EzmaxinvoicingsummaryglobalResponseCompound., must conform to the pattern /^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/.");
        }


        //if (is_null($dEzmaxinvoicingsummaryglobalSubtotal)) {
            //throw new \InvalidArgumentException('non-nullable dEzmaxinvoicingsummaryglobalSubtotal cannot be null');
        //}
        $this->container['dEzmaxinvoicingsummaryglobalSubtotal'] = (is_null($dEzmaxinvoicingsummaryglobalSubtotal) ? null : (string) $dEzmaxinvoicingsummaryglobalSubtotal);

        return $this;
    }

    /**
     * Gets dEzmaxinvoicingsummaryglobalRebateamount
     *
     * @return string
     */
    public function getDEzmaxinvoicingsummaryglobalRebateamount()
    {
        return $this->container['dEzmaxinvoicingsummaryglobalRebateamount'];
    }

    /**
     * Sets dEzmaxinvoicingsummaryglobalRebateamount
     *
     * @param string $dEzmaxinvoicingsummaryglobalRebateamount The rebate amount for the Ezmaxinvoicingsummaryglobal
     *
     * @return self
     */
    public function setDEzmaxinvoicingsummaryglobalRebateamount($dEzmaxinvoicingsummaryglobalRebateamount)
    {

        if ((!preg_match("/^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/", $dEzmaxinvoicingsummaryglobalRebateamount))) {
            throw new \InvalidArgumentException("invalid value for \$dEzmaxinvoicingsummaryglobalRebateamount when calling EzmaxinvoicingsummaryglobalResponseCompound., must conform to the pattern /^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/.");
        }


        //if (is_null($dEzmaxinvoicingsummaryglobalRebateamount)) {
            //throw new \InvalidArgumentException('non-nullable dEzmaxinvoicingsummaryglobalRebateamount cannot be null');
        //}
        $this->container['dEzmaxinvoicingsummaryglobalRebateamount'] = (is_null($dEzmaxinvoicingsummaryglobalRebateamount) ? null : (string) $dEzmaxinvoicingsummaryglobalRebateamount);

        return $this;
    }

    /**
     * Gets dEzmaxinvoicingsummaryglobalRebatepercent
     *
     * @return string
     */
    public function getDEzmaxinvoicingsummaryglobalRebatepercent()
    {
        return $this->container['dEzmaxinvoicingsummaryglobalRebatepercent'];
    }

    /**
     * Sets dEzmaxinvoicingsummaryglobalRebatepercent
     *
     * @param string $dEzmaxinvoicingsummaryglobalRebatepercent The rebate percentage of the Ezmaxinvoicingsummaryglobal
     *
     * @return self
     */
    public function setDEzmaxinvoicingsummaryglobalRebatepercent($dEzmaxinvoicingsummaryglobalRebatepercent)
    {

        if ((!preg_match("/^-{0,1}[\\d]{1,3}?\\.[\\d]{2}$/", $dEzmaxinvoicingsummaryglobalRebatepercent))) {
            throw new \InvalidArgumentException("invalid value for \$dEzmaxinvoicingsummaryglobalRebatepercent when calling EzmaxinvoicingsummaryglobalResponseCompound., must conform to the pattern /^-{0,1}[\\d]{1,3}?\\.[\\d]{2}$/.");
        }


        //if (is_null($dEzmaxinvoicingsummaryglobalRebatepercent)) {
            //throw new \InvalidArgumentException('non-nullable dEzmaxinvoicingsummaryglobalRebatepercent cannot be null');
        //}
        $this->container['dEzmaxinvoicingsummaryglobalRebatepercent'] = (is_null($dEzmaxinvoicingsummaryglobalRebatepercent) ? null : (string) $dEzmaxinvoicingsummaryglobalRebatepercent);

        return $this;
    }

    /**
     * Gets dEzmaxinvoicingsummaryglobalRebatetotal
     *
     * @return string
     */
    public function getDEzmaxinvoicingsummaryglobalRebatetotal()
    {
        return $this->container['dEzmaxinvoicingsummaryglobalRebatetotal'];
    }

    /**
     * Sets dEzmaxinvoicingsummaryglobalRebatetotal
     *
     * @param string $dEzmaxinvoicingsummaryglobalRebatetotal The rebate amount total for the Ezmaxinvoicingsummaryglobal
     *
     * @return self
     */
    public function setDEzmaxinvoicingsummaryglobalRebatetotal($dEzmaxinvoicingsummaryglobalRebatetotal)
    {

        if ((!preg_match("/^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/", $dEzmaxinvoicingsummaryglobalRebatetotal))) {
            throw new \InvalidArgumentException("invalid value for \$dEzmaxinvoicingsummaryglobalRebatetotal when calling EzmaxinvoicingsummaryglobalResponseCompound., must conform to the pattern /^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/.");
        }


        //if (is_null($dEzmaxinvoicingsummaryglobalRebatetotal)) {
            //throw new \InvalidArgumentException('non-nullable dEzmaxinvoicingsummaryglobalRebatetotal cannot be null');
        //}
        $this->container['dEzmaxinvoicingsummaryglobalRebatetotal'] = (is_null($dEzmaxinvoicingsummaryglobalRebatetotal) ? null : (string) $dEzmaxinvoicingsummaryglobalRebatetotal);

        return $this;
    }

    /**
     * Gets dEzmaxinvoicingsummaryglobalTotal
     *
     * @return string
     */
    public function getDEzmaxinvoicingsummaryglobalTotal()
    {
        return $this->container['dEzmaxinvoicingsummaryglobalTotal'];
    }

    /**
     * Sets dEzmaxinvoicingsummaryglobalTotal
     *
     * @param string $dEzmaxinvoicingsummaryglobalTotal The Ezmaxinvoicingsummaryglobal total
     *
     * @return self
     */
    public function setDEzmaxinvoicingsummaryglobalTotal($dEzmaxinvoicingsummaryglobalTotal)
    {

        if ((!preg_match("/^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/", $dEzmaxinvoicingsummaryglobalTotal))) {
            throw new \InvalidArgumentException("invalid value for \$dEzmaxinvoicingsummaryglobalTotal when calling EzmaxinvoicingsummaryglobalResponseCompound., must conform to the pattern /^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/.");
        }


        //if (is_null($dEzmaxinvoicingsummaryglobalTotal)) {
            //throw new \InvalidArgumentException('non-nullable dEzmaxinvoicingsummaryglobalTotal cannot be null');
        //}
        $this->container['dEzmaxinvoicingsummaryglobalTotal'] = (is_null($dEzmaxinvoicingsummaryglobalTotal) ? null : (string) $dEzmaxinvoicingsummaryglobalTotal);

        return $this;
    }

    /**
     * Gets dEzmaxinvoicingsummaryglobalRepresentative
     *
     * @return string|null
     */
    public function getDEzmaxinvoicingsummaryglobalRepresentative()
    {
        return $this->container['dEzmaxinvoicingsummaryglobalRepresentative'];
    }

    /**
     * Sets dEzmaxinvoicingsummaryglobalRepresentative
     *
     * @param string|null $dEzmaxinvoicingsummaryglobalRepresentative The amount of commission for the representative
     *
     * @return self
     */
    public function setDEzmaxinvoicingsummaryglobalRepresentative($dEzmaxinvoicingsummaryglobalRepresentative)
    {

        if (!is_null($dEzmaxinvoicingsummaryglobalRepresentative) && (!preg_match("/^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/", $dEzmaxinvoicingsummaryglobalRepresentative))) {
            throw new \InvalidArgumentException("invalid value for \$dEzmaxinvoicingsummaryglobalRepresentative when calling EzmaxinvoicingsummaryglobalResponseCompound., must conform to the pattern /^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/.");
        }


        //if (is_null($dEzmaxinvoicingsummaryglobalRepresentative)) {
            //throw new \InvalidArgumentException('non-nullable dEzmaxinvoicingsummaryglobalRepresentative cannot be null');
        //}
        $this->container['dEzmaxinvoicingsummaryglobalRepresentative'] = (is_null($dEzmaxinvoicingsummaryglobalRepresentative) ? null : (string) $dEzmaxinvoicingsummaryglobalRepresentative);

        return $this;
    }

    /**
     * Gets dEzmaxinvoicingsummaryglobalPartner
     *
     * @return string|null
     */
    public function getDEzmaxinvoicingsummaryglobalPartner()
    {
        return $this->container['dEzmaxinvoicingsummaryglobalPartner'];
    }

    /**
     * Sets dEzmaxinvoicingsummaryglobalPartner
     *
     * @param string|null $dEzmaxinvoicingsummaryglobalPartner The amount of commission for the partner
     *
     * @return self
     */
    public function setDEzmaxinvoicingsummaryglobalPartner($dEzmaxinvoicingsummaryglobalPartner)
    {

        if (!is_null($dEzmaxinvoicingsummaryglobalPartner) && (!preg_match("/^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/", $dEzmaxinvoicingsummaryglobalPartner))) {
            throw new \InvalidArgumentException("invalid value for \$dEzmaxinvoicingsummaryglobalPartner when calling EzmaxinvoicingsummaryglobalResponseCompound., must conform to the pattern /^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/.");
        }


        //if (is_null($dEzmaxinvoicingsummaryglobalPartner)) {
            //throw new \InvalidArgumentException('non-nullable dEzmaxinvoicingsummaryglobalPartner cannot be null');
        //}
        $this->container['dEzmaxinvoicingsummaryglobalPartner'] = (is_null($dEzmaxinvoicingsummaryglobalPartner) ? null : (string) $dEzmaxinvoicingsummaryglobalPartner);

        return $this;
    }

    /**
     * Gets dEzmaxinvoicingsummaryglobalNet
     *
     * @return string|null
     */
    public function getDEzmaxinvoicingsummaryglobalNet()
    {
        return $this->container['dEzmaxinvoicingsummaryglobalNet'];
    }

    /**
     * Sets dEzmaxinvoicingsummaryglobalNet
     *
     * @param string|null $dEzmaxinvoicingsummaryglobalNet The net amount of the Ezmaxinvoicingsummaryglobal
     *
     * @return self
     */
    public function setDEzmaxinvoicingsummaryglobalNet($dEzmaxinvoicingsummaryglobalNet)
    {

        if (!is_null($dEzmaxinvoicingsummaryglobalNet) && (!preg_match("/^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/", $dEzmaxinvoicingsummaryglobalNet))) {
            throw new \InvalidArgumentException("invalid value for \$dEzmaxinvoicingsummaryglobalNet when calling EzmaxinvoicingsummaryglobalResponseCompound., must conform to the pattern /^-{0,1}[\\d]{1,9}?\\.[\\d]{2}$/.");
        }


        //if (is_null($dEzmaxinvoicingsummaryglobalNet)) {
            //throw new \InvalidArgumentException('non-nullable dEzmaxinvoicingsummaryglobalNet cannot be null');
        //}
        $this->container['dEzmaxinvoicingsummaryglobalNet'] = (is_null($dEzmaxinvoicingsummaryglobalNet) ? null : (string) $dEzmaxinvoicingsummaryglobalNet);

        return $this;
    }

    /**
     * Gets bEzmaxinvoicingsummaryglobalAdjustment
     *
     * @return bool
     */
    public function getBEzmaxinvoicingsummaryglobalAdjustment()
    {
        return $this->container['bEzmaxinvoicingsummaryglobalAdjustment'];
    }

    /**
     * Sets bEzmaxinvoicingsummaryglobalAdjustment
     *
     * @param bool $bEzmaxinvoicingsummaryglobalAdjustment Whether it is adjustment for the Ezmaxinvoicingsummaryglobal
     *
     * @return self
     */
    public function setBEzmaxinvoicingsummaryglobalAdjustment($bEzmaxinvoicingsummaryglobalAdjustment)
    {

        //if (is_null($bEzmaxinvoicingsummaryglobalAdjustment)) {
            //throw new \InvalidArgumentException('non-nullable bEzmaxinvoicingsummaryglobalAdjustment cannot be null');
        //}
        $this->container['bEzmaxinvoicingsummaryglobalAdjustment'] = (is_null($bEzmaxinvoicingsummaryglobalAdjustment) ? null : (bool) $bEzmaxinvoicingsummaryglobalAdjustment);

        return $this;
    }

    /**
     * Gets aObjEzmaxinvoicingcommission
     *
     * @return \eZmaxAPI\Model\EzmaxinvoicingcommissionResponseCompound[]|null
     */
    public function getAObjEzmaxinvoicingcommission()
    {
        return $this->container['aObjEzmaxinvoicingcommission'];
    }

    /**
     * Sets aObjEzmaxinvoicingcommission
     *
     * @param \eZmaxAPI\Model\EzmaxinvoicingcommissionResponseCompound[]|null $aObjEzmaxinvoicingcommission aObjEzmaxinvoicingcommission
     *
     * @return self
     */
    public function setAObjEzmaxinvoicingcommission($aObjEzmaxinvoicingcommission)
    {

        //if (is_null($aObjEzmaxinvoicingcommission)) {
            //throw new \InvalidArgumentException('non-nullable aObjEzmaxinvoicingcommission cannot be null');
        //}
        $this->container['aObjEzmaxinvoicingcommission'] = $aObjEzmaxinvoicingcommission;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


