<?php
/**
 * EzsigntemplatepackagemembershipCreateObjectV1ResponseMPayload
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  eZmaxAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.9
 * Contact: support-api@ezmax.ca
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace eZmaxAPI\Model;

use \ArrayAccess;
use \eZmaxAPI\ObjectSerializer;

/**
 * EzsigntemplatepackagemembershipCreateObjectV1ResponseMPayload Class Doc Comment
 *
 * @category Class
 * @description Payload for POST /1/object/ezsigntemplatepackagemembership
 * @package  eZmaxAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class EzsigntemplatepackagemembershipCreateObjectV1ResponseMPayload implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ezsigntemplatepackagemembership-createObject-v1-Response-mPayload';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'aPkiEzsigntemplatepackagemembershipID' => 'int[]',
        'bEzsigntemplatepackageNeedvalidation' => 'bool',
        'bEzsignbulksendNeedvalidation' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'aPkiEzsigntemplatepackagemembershipID' => null,
        'bEzsigntemplatepackageNeedvalidation' => null,
        'bEzsignbulksendNeedvalidation' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'aPkiEzsigntemplatepackagemembershipID' => 'a_pkiEzsigntemplatepackagemembershipID',
        'bEzsigntemplatepackageNeedvalidation' => 'bEzsigntemplatepackageNeedvalidation',
        'bEzsignbulksendNeedvalidation' => 'bEzsignbulksendNeedvalidation'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'aPkiEzsigntemplatepackagemembershipID' => 'setAPkiEzsigntemplatepackagemembershipID',
        'bEzsigntemplatepackageNeedvalidation' => 'setBEzsigntemplatepackageNeedvalidation',
        'bEzsignbulksendNeedvalidation' => 'setBEzsignbulksendNeedvalidation'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'aPkiEzsigntemplatepackagemembershipID' => 'getAPkiEzsigntemplatepackagemembershipID',
        'bEzsigntemplatepackageNeedvalidation' => 'getBEzsigntemplatepackageNeedvalidation',
        'bEzsignbulksendNeedvalidation' => 'getBEzsignbulksendNeedvalidation'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['aPkiEzsigntemplatepackagemembershipID'] = $data['aPkiEzsigntemplatepackagemembershipID'] ?? null;
        $this->container['bEzsigntemplatepackageNeedvalidation'] = $data['bEzsigntemplatepackageNeedvalidation'] ?? null;
        $this->container['bEzsignbulksendNeedvalidation'] = $data['bEzsignbulksendNeedvalidation'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['aPkiEzsigntemplatepackagemembershipID'] === null) {
            $invalidProperties[] = "'aPkiEzsigntemplatepackagemembershipID' can't be null";
        }
        if ($this->container['bEzsigntemplatepackageNeedvalidation'] === null) {
            $invalidProperties[] = "'bEzsigntemplatepackageNeedvalidation' can't be null";
        }
        if ($this->container['bEzsignbulksendNeedvalidation'] === null) {
            $invalidProperties[] = "'bEzsignbulksendNeedvalidation' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets aPkiEzsigntemplatepackagemembershipID
     *
     * @return int[]
     */
    public function getAPkiEzsigntemplatepackagemembershipID()
    {
        return $this->container['aPkiEzsigntemplatepackagemembershipID'];
    }

    /**
     * Sets aPkiEzsigntemplatepackagemembershipID
     *
     * @param int[] $aPkiEzsigntemplatepackagemembershipID An array of unique IDs representing the object that were requested to be created.  They are returned in the same order as the array containing the objects to be created that was sent in the request.
     *
     * @return self
     */
    public function setAPkiEzsigntemplatepackagemembershipID($aPkiEzsigntemplatepackagemembershipID)
    {
        $this->container['aPkiEzsigntemplatepackagemembershipID'] = $aPkiEzsigntemplatepackagemembershipID;

        return $this;
    }

    /**
     * Gets bEzsigntemplatepackageNeedvalidation
     *
     * @return bool
     */
    public function getBEzsigntemplatepackageNeedvalidation()
    {
        return $this->container['bEzsigntemplatepackageNeedvalidation'];
    }

    /**
     * Sets bEzsigntemplatepackageNeedvalidation
     *
     * @param bool $bEzsigntemplatepackageNeedvalidation Whether the Ezsignbulksend was automatically modified and needs a manual validation
     *
     * @return self
     */
    public function setBEzsigntemplatepackageNeedvalidation($bEzsigntemplatepackageNeedvalidation)
    {
        $this->container['bEzsigntemplatepackageNeedvalidation'] = $bEzsigntemplatepackageNeedvalidation;

        return $this;
    }

    /**
     * Gets bEzsignbulksendNeedvalidation
     *
     * @return bool
     */
    public function getBEzsignbulksendNeedvalidation()
    {
        return $this->container['bEzsignbulksendNeedvalidation'];
    }

    /**
     * Sets bEzsignbulksendNeedvalidation
     *
     * @param bool $bEzsignbulksendNeedvalidation Whether the Ezsigntemplatepackage was automatically modified and needs a manual validation
     *
     * @return self
     */
    public function setBEzsignbulksendNeedvalidation($bEzsignbulksendNeedvalidation)
    {
        $this->container['bEzsignbulksendNeedvalidation'] = $bEzsignbulksendNeedvalidation;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


