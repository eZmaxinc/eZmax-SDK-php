<?php
/**
 * EzmaxinvoicingResponseCompoundAllOf
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  eZmaxAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * eZmax API Definition (Full)
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.11
 * Contact: support-api@ezmax.ca
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.1.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace eZmaxAPI\Model;

use \ArrayAccess;
use \eZmaxAPI\ObjectSerializer;

/**
 * EzmaxinvoicingResponseCompoundAllOf Class Doc Comment
 *
 * @category Class
 * @package  eZmaxAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class EzmaxinvoicingResponseCompoundAllOf implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ezmaxinvoicing_ResponseCompound_allOf';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'objEzmaxinvoicingcontract' => '\eZmaxAPI\Model\EzmaxinvoicingcontractResponseCompound',
        'objEzmaxpricing' => '\eZmaxAPI\Model\CustomEzmaxpricingResponse',
        'aObjEzmaxinvoicingsummaryglobal' => '\eZmaxAPI\Model\EzmaxinvoicingsummaryglobalResponseCompound[]',
        'aObjEzmaxinvoicingsummaryexternal' => '\eZmaxAPI\Model\EzmaxinvoicingsummaryexternalResponseCompound[]',
        'aObjEzmaxinvoicingsummaryinternal' => '\eZmaxAPI\Model\EzmaxinvoicingsummaryinternalResponseCompound[]',
        'aObjEzmaxinvoicingagent' => '\eZmaxAPI\Model\EzmaxinvoicingagentResponseCompound[]',
        'aObjEzmaxinvoicinguser' => '\eZmaxAPI\Model\EzmaxinvoicinguserResponseCompound[]',
        'aObjEzmaxinvoicingezsignfolder' => '\eZmaxAPI\Model\CustomEzmaxinvoicingEzsignfolderResponse[]',
        'aObjEzmaxinvoicingezsigndocument' => '\eZmaxAPI\Model\CustomEzmaxinvoicingEzsigndocumentResponse[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'objEzmaxinvoicingcontract' => null,
        'objEzmaxpricing' => null,
        'aObjEzmaxinvoicingsummaryglobal' => null,
        'aObjEzmaxinvoicingsummaryexternal' => null,
        'aObjEzmaxinvoicingsummaryinternal' => null,
        'aObjEzmaxinvoicingagent' => null,
        'aObjEzmaxinvoicinguser' => null,
        'aObjEzmaxinvoicingezsignfolder' => null,
        'aObjEzmaxinvoicingezsigndocument' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'objEzmaxinvoicingcontract' => false,
		'objEzmaxpricing' => false,
		'aObjEzmaxinvoicingsummaryglobal' => false,
		'aObjEzmaxinvoicingsummaryexternal' => false,
		'aObjEzmaxinvoicingsummaryinternal' => false,
		'aObjEzmaxinvoicingagent' => false,
		'aObjEzmaxinvoicinguser' => false,
		'aObjEzmaxinvoicingezsignfolder' => false,
		'aObjEzmaxinvoicingezsigndocument' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'objEzmaxinvoicingcontract' => 'objEzmaxinvoicingcontract',
        'objEzmaxpricing' => 'objEzmaxpricing',
        'aObjEzmaxinvoicingsummaryglobal' => 'a_objEzmaxinvoicingsummaryglobal',
        'aObjEzmaxinvoicingsummaryexternal' => 'a_objEzmaxinvoicingsummaryexternal',
        'aObjEzmaxinvoicingsummaryinternal' => 'a_objEzmaxinvoicingsummaryinternal',
        'aObjEzmaxinvoicingagent' => 'a_objEzmaxinvoicingagent',
        'aObjEzmaxinvoicinguser' => 'a_objEzmaxinvoicinguser',
        'aObjEzmaxinvoicingezsignfolder' => 'a_objEzmaxinvoicingezsignfolder',
        'aObjEzmaxinvoicingezsigndocument' => 'a_objEzmaxinvoicingezsigndocument'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'objEzmaxinvoicingcontract' => 'setObjEzmaxinvoicingcontract',
        'objEzmaxpricing' => 'setObjEzmaxpricing',
        'aObjEzmaxinvoicingsummaryglobal' => 'setAObjEzmaxinvoicingsummaryglobal',
        'aObjEzmaxinvoicingsummaryexternal' => 'setAObjEzmaxinvoicingsummaryexternal',
        'aObjEzmaxinvoicingsummaryinternal' => 'setAObjEzmaxinvoicingsummaryinternal',
        'aObjEzmaxinvoicingagent' => 'setAObjEzmaxinvoicingagent',
        'aObjEzmaxinvoicinguser' => 'setAObjEzmaxinvoicinguser',
        'aObjEzmaxinvoicingezsignfolder' => 'setAObjEzmaxinvoicingezsignfolder',
        'aObjEzmaxinvoicingezsigndocument' => 'setAObjEzmaxinvoicingezsigndocument'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'objEzmaxinvoicingcontract' => 'getObjEzmaxinvoicingcontract',
        'objEzmaxpricing' => 'getObjEzmaxpricing',
        'aObjEzmaxinvoicingsummaryglobal' => 'getAObjEzmaxinvoicingsummaryglobal',
        'aObjEzmaxinvoicingsummaryexternal' => 'getAObjEzmaxinvoicingsummaryexternal',
        'aObjEzmaxinvoicingsummaryinternal' => 'getAObjEzmaxinvoicingsummaryinternal',
        'aObjEzmaxinvoicingagent' => 'getAObjEzmaxinvoicingagent',
        'aObjEzmaxinvoicinguser' => 'getAObjEzmaxinvoicinguser',
        'aObjEzmaxinvoicingezsignfolder' => 'getAObjEzmaxinvoicingezsignfolder',
        'aObjEzmaxinvoicingezsigndocument' => 'getAObjEzmaxinvoicingezsigndocument'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('objEzmaxinvoicingcontract', $data ?? [], null);
        $this->setIfExists('objEzmaxpricing', $data ?? [], null);
        $this->setIfExists('aObjEzmaxinvoicingsummaryglobal', $data ?? [], null);
        $this->setIfExists('aObjEzmaxinvoicingsummaryexternal', $data ?? [], null);
        $this->setIfExists('aObjEzmaxinvoicingsummaryinternal', $data ?? [], null);
        $this->setIfExists('aObjEzmaxinvoicingagent', $data ?? [], null);
        $this->setIfExists('aObjEzmaxinvoicinguser', $data ?? [], null);
        $this->setIfExists('aObjEzmaxinvoicingezsignfolder', $data ?? [], null);
        $this->setIfExists('aObjEzmaxinvoicingezsigndocument', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['objEzmaxinvoicingcontract'] === null) {
            $invalidProperties[] = "'objEzmaxinvoicingcontract' can't be null";
        }
        if ($this->container['objEzmaxpricing'] === null) {
            $invalidProperties[] = "'objEzmaxpricing' can't be null";
        }
        if ($this->container['aObjEzmaxinvoicingsummaryglobal'] === null) {
            $invalidProperties[] = "'aObjEzmaxinvoicingsummaryglobal' can't be null";
        }
        if ($this->container['aObjEzmaxinvoicingsummaryexternal'] === null) {
            $invalidProperties[] = "'aObjEzmaxinvoicingsummaryexternal' can't be null";
        }
        if ($this->container['aObjEzmaxinvoicingsummaryinternal'] === null) {
            $invalidProperties[] = "'aObjEzmaxinvoicingsummaryinternal' can't be null";
        }
        if ($this->container['aObjEzmaxinvoicingagent'] === null) {
            $invalidProperties[] = "'aObjEzmaxinvoicingagent' can't be null";
        }
        if ($this->container['aObjEzmaxinvoicinguser'] === null) {
            $invalidProperties[] = "'aObjEzmaxinvoicinguser' can't be null";
        }
        if ($this->container['aObjEzmaxinvoicingezsignfolder'] === null) {
            $invalidProperties[] = "'aObjEzmaxinvoicingezsignfolder' can't be null";
        }
        if ($this->container['aObjEzmaxinvoicingezsigndocument'] === null) {
            $invalidProperties[] = "'aObjEzmaxinvoicingezsigndocument' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets objEzmaxinvoicingcontract
     *
     * @return \eZmaxAPI\Model\EzmaxinvoicingcontractResponseCompound
     */
    public function getObjEzmaxinvoicingcontract()
    {
        return $this->container['objEzmaxinvoicingcontract'];
    }

    /**
     * Sets objEzmaxinvoicingcontract
     *
     * @param \eZmaxAPI\Model\EzmaxinvoicingcontractResponseCompound $objEzmaxinvoicingcontract objEzmaxinvoicingcontract
     *
     * @return self
     */
    public function setObjEzmaxinvoicingcontract($objEzmaxinvoicingcontract)
    {

        //if (is_null($objEzmaxinvoicingcontract)) {
            //throw new \InvalidArgumentException('non-nullable objEzmaxinvoicingcontract cannot be null');
        //}
        $this->container['objEzmaxinvoicingcontract'] = $objEzmaxinvoicingcontract;

        return $this;
    }

    /**
     * Gets objEzmaxpricing
     *
     * @return \eZmaxAPI\Model\CustomEzmaxpricingResponse
     */
    public function getObjEzmaxpricing()
    {
        return $this->container['objEzmaxpricing'];
    }

    /**
     * Sets objEzmaxpricing
     *
     * @param \eZmaxAPI\Model\CustomEzmaxpricingResponse $objEzmaxpricing objEzmaxpricing
     *
     * @return self
     */
    public function setObjEzmaxpricing($objEzmaxpricing)
    {

        //if (is_null($objEzmaxpricing)) {
            //throw new \InvalidArgumentException('non-nullable objEzmaxpricing cannot be null');
        //}
        $this->container['objEzmaxpricing'] = $objEzmaxpricing;

        return $this;
    }

    /**
     * Gets aObjEzmaxinvoicingsummaryglobal
     *
     * @return \eZmaxAPI\Model\EzmaxinvoicingsummaryglobalResponseCompound[]
     */
    public function getAObjEzmaxinvoicingsummaryglobal()
    {
        return $this->container['aObjEzmaxinvoicingsummaryglobal'];
    }

    /**
     * Sets aObjEzmaxinvoicingsummaryglobal
     *
     * @param \eZmaxAPI\Model\EzmaxinvoicingsummaryglobalResponseCompound[] $aObjEzmaxinvoicingsummaryglobal aObjEzmaxinvoicingsummaryglobal
     *
     * @return self
     */
    public function setAObjEzmaxinvoicingsummaryglobal($aObjEzmaxinvoicingsummaryglobal)
    {

        //if (is_null($aObjEzmaxinvoicingsummaryglobal)) {
            //throw new \InvalidArgumentException('non-nullable aObjEzmaxinvoicingsummaryglobal cannot be null');
        //}
        $this->container['aObjEzmaxinvoicingsummaryglobal'] = $aObjEzmaxinvoicingsummaryglobal;

        return $this;
    }

    /**
     * Gets aObjEzmaxinvoicingsummaryexternal
     *
     * @return \eZmaxAPI\Model\EzmaxinvoicingsummaryexternalResponseCompound[]
     */
    public function getAObjEzmaxinvoicingsummaryexternal()
    {
        return $this->container['aObjEzmaxinvoicingsummaryexternal'];
    }

    /**
     * Sets aObjEzmaxinvoicingsummaryexternal
     *
     * @param \eZmaxAPI\Model\EzmaxinvoicingsummaryexternalResponseCompound[] $aObjEzmaxinvoicingsummaryexternal aObjEzmaxinvoicingsummaryexternal
     *
     * @return self
     */
    public function setAObjEzmaxinvoicingsummaryexternal($aObjEzmaxinvoicingsummaryexternal)
    {

        //if (is_null($aObjEzmaxinvoicingsummaryexternal)) {
            //throw new \InvalidArgumentException('non-nullable aObjEzmaxinvoicingsummaryexternal cannot be null');
        //}
        $this->container['aObjEzmaxinvoicingsummaryexternal'] = $aObjEzmaxinvoicingsummaryexternal;

        return $this;
    }

    /**
     * Gets aObjEzmaxinvoicingsummaryinternal
     *
     * @return \eZmaxAPI\Model\EzmaxinvoicingsummaryinternalResponseCompound[]
     */
    public function getAObjEzmaxinvoicingsummaryinternal()
    {
        return $this->container['aObjEzmaxinvoicingsummaryinternal'];
    }

    /**
     * Sets aObjEzmaxinvoicingsummaryinternal
     *
     * @param \eZmaxAPI\Model\EzmaxinvoicingsummaryinternalResponseCompound[] $aObjEzmaxinvoicingsummaryinternal aObjEzmaxinvoicingsummaryinternal
     *
     * @return self
     */
    public function setAObjEzmaxinvoicingsummaryinternal($aObjEzmaxinvoicingsummaryinternal)
    {

        //if (is_null($aObjEzmaxinvoicingsummaryinternal)) {
            //throw new \InvalidArgumentException('non-nullable aObjEzmaxinvoicingsummaryinternal cannot be null');
        //}
        $this->container['aObjEzmaxinvoicingsummaryinternal'] = $aObjEzmaxinvoicingsummaryinternal;

        return $this;
    }

    /**
     * Gets aObjEzmaxinvoicingagent
     *
     * @return \eZmaxAPI\Model\EzmaxinvoicingagentResponseCompound[]
     */
    public function getAObjEzmaxinvoicingagent()
    {
        return $this->container['aObjEzmaxinvoicingagent'];
    }

    /**
     * Sets aObjEzmaxinvoicingagent
     *
     * @param \eZmaxAPI\Model\EzmaxinvoicingagentResponseCompound[] $aObjEzmaxinvoicingagent aObjEzmaxinvoicingagent
     *
     * @return self
     */
    public function setAObjEzmaxinvoicingagent($aObjEzmaxinvoicingagent)
    {

        //if (is_null($aObjEzmaxinvoicingagent)) {
            //throw new \InvalidArgumentException('non-nullable aObjEzmaxinvoicingagent cannot be null');
        //}
        $this->container['aObjEzmaxinvoicingagent'] = $aObjEzmaxinvoicingagent;

        return $this;
    }

    /**
     * Gets aObjEzmaxinvoicinguser
     *
     * @return \eZmaxAPI\Model\EzmaxinvoicinguserResponseCompound[]
     */
    public function getAObjEzmaxinvoicinguser()
    {
        return $this->container['aObjEzmaxinvoicinguser'];
    }

    /**
     * Sets aObjEzmaxinvoicinguser
     *
     * @param \eZmaxAPI\Model\EzmaxinvoicinguserResponseCompound[] $aObjEzmaxinvoicinguser aObjEzmaxinvoicinguser
     *
     * @return self
     */
    public function setAObjEzmaxinvoicinguser($aObjEzmaxinvoicinguser)
    {

        //if (is_null($aObjEzmaxinvoicinguser)) {
            //throw new \InvalidArgumentException('non-nullable aObjEzmaxinvoicinguser cannot be null');
        //}
        $this->container['aObjEzmaxinvoicinguser'] = $aObjEzmaxinvoicinguser;

        return $this;
    }

    /**
     * Gets aObjEzmaxinvoicingezsignfolder
     *
     * @return \eZmaxAPI\Model\CustomEzmaxinvoicingEzsignfolderResponse[]
     */
    public function getAObjEzmaxinvoicingezsignfolder()
    {
        return $this->container['aObjEzmaxinvoicingezsignfolder'];
    }

    /**
     * Sets aObjEzmaxinvoicingezsignfolder
     *
     * @param \eZmaxAPI\Model\CustomEzmaxinvoicingEzsignfolderResponse[] $aObjEzmaxinvoicingezsignfolder aObjEzmaxinvoicingezsignfolder
     *
     * @return self
     */
    public function setAObjEzmaxinvoicingezsignfolder($aObjEzmaxinvoicingezsignfolder)
    {

        //if (is_null($aObjEzmaxinvoicingezsignfolder)) {
            //throw new \InvalidArgumentException('non-nullable aObjEzmaxinvoicingezsignfolder cannot be null');
        //}
        $this->container['aObjEzmaxinvoicingezsignfolder'] = $aObjEzmaxinvoicingezsignfolder;

        return $this;
    }

    /**
     * Gets aObjEzmaxinvoicingezsigndocument
     *
     * @return \eZmaxAPI\Model\CustomEzmaxinvoicingEzsigndocumentResponse[]
     */
    public function getAObjEzmaxinvoicingezsigndocument()
    {
        return $this->container['aObjEzmaxinvoicingezsigndocument'];
    }

    /**
     * Sets aObjEzmaxinvoicingezsigndocument
     *
     * @param \eZmaxAPI\Model\CustomEzmaxinvoicingEzsigndocumentResponse[] $aObjEzmaxinvoicingezsigndocument aObjEzmaxinvoicingezsigndocument
     *
     * @return self
     */
    public function setAObjEzmaxinvoicingezsigndocument($aObjEzmaxinvoicingezsigndocument)
    {

        //if (is_null($aObjEzmaxinvoicingezsigndocument)) {
            //throw new \InvalidArgumentException('non-nullable aObjEzmaxinvoicingezsigndocument cannot be null');
        //}
        $this->container['aObjEzmaxinvoicingezsigndocument'] = $aObjEzmaxinvoicingezsigndocument;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


